@page "/Nhanvien/Delete/{id}"
@inject IJSRuntime JS
@using Model
@using Model.DataDB
@using Model.Dto
@using Web_Admin_Client.Service
@inject NavigationManager NavigationManager;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IToastService toastService


<EditForm Model="nhanvien">
    <form class="forms-sample">
        <div class="form-group">
            <label for="exampleInputUsername1">Mã nhân viên</label>
            <InputText class="form-control" placeholder="" @bind-Value="nhanvien.MaNv"></InputText>
        </div>
        <div class="form-group">
            <label for="exampleInputUsername1">Tên nhân viên</label>
            <InputText class="form-control" placeholder="" @bind-Value="nhanvien.HtenNv"></InputText>
        </div>
    </form>
    <button type="button" class="btn btn-gradient-primary me-2" @onclick="Submit" style="margin-left:19%">Xóa</button>
    <button type="button" class="btn btn-gradient-primary me-2" @onclick="Close" style="margin-left:19%">Hủy</button>
</EditForm>

@code {
    [Parameter]
    public string id { get; set; }
    private string tennv { get; set; }
    private NhanvienDto nhanvien = new NhanvienDto();
    NhanvienService nhanvienService = new NhanvienService();
    [CascadingParameter] public IModalService Modal { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }


    protected async override Task OnInitializedAsync()
    {

        var nv_id = await sessionStorage.GetItemAsync<string>("nv_idDelete");
        var result = await nhanvienService.GetNhanvien(nv_id);
        nhanvien.HtenNv = result.HtenNv;
        nhanvien.MaNv = result.MaNv;
        await sessionStorage.SetItemAsync<string>("tennv", nhanvien.HtenNv);


    }
    private async void Submit()
    {
        var nv_id = await sessionStorage.GetItemAsync<string>("nv_idDelete");
        var ten = await sessionStorage.GetItemAsync<string>("tennv");
        await nhanvienService.DeleteNhanvien(nv_id);
        NavigationManager.NavigateTo("/Nhanvien/Index",forceLoad:true);
        toastService.ShowSuccess("Đã xóa nhân viên" + ten, "Thành công !");

    }
    private async void Close()
    {
        await this.ModalInstance.CancelAsync();
    }
}
