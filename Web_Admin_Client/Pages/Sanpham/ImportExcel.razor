@page "/Sanpham/ImportExcel"
@using Blazored.Modal.Services
@using Model
@using Model.DataDB
@using Model.Dto
@using Models.Page
@using System.Globalization
@using Web_Admin_Client.Pages.Sanpham
@using Web_Admin_Client.Service
@layout MainLayout
@inject IJSRuntime JS
@inject IToastService toastService
@inject IWebHostEnvironment Environment
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage


<EditForm Model="sanphamdto">
    <form class="forms-sample">
        <div class="form-group">
            <label for="exampleInputEmail1">Tải file...</label>
            <InputFile OnChange="@LoadFiles" multiple />
        </div>
    </form>
    <button type="button" class="btn btn-gradient-primary me-2" style="margin-left:19%" @onclick="Close">Lưu</button>
    <button type="button" class="btn btn-gradient-primary me-2" style="margin-left:19%" @onclick="Close">Đóng</button>
</EditForm>

@code {
    private SanphamEdit sanphamdto = new SanphamEdit();
    SanphamService sanphamService = new SanphamService();
    [CascadingParameter] public IModalService Modal { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    private List<IBrowserFile> loadedFiles = new();
    private int maxFileUpload = 1; //multipleFile
    string filePath = "";

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles(maxFileUpload))
        {
            try
            {
                loadedFiles.Add(file);
                var filename = file.Name;
                var size = file.Size;
                var path = Path.Combine(Environment.WebRootPath, "fileExcel", filename);
                await using FileStream fs = new(path, FileMode.Create);
                await file.OpenReadStream(size).CopyToAsync(fs);
                ////Add Table Temp
                List<SanphamEdit> table = new List<SanphamEdit>();
                FileInfo fileInfo = new FileInfo(path);
                ExcelPackage.LicenseContext = LicenseContext.NonCommercial;
                using (ExcelPackage excelPackage = new ExcelPackage(fileInfo))
                {
                    ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets.FirstOrDefault();
                    int totalCollumn = worksheet.Dimension.End.Column;
                    int totalRow = worksheet.Dimension.End.Row;

                    for (int row = 2; row <= totalRow; row++)
                    {
                        SanphamEdit emp = new SanphamEdit();
                        for (int col = 1; col <= totalCollumn; col++)
                        {

                            if (col == 1) emp.MaSp = worksheet.Cells[row, col].Value.ToString();
                            if (col == 2) emp.MaHsx = worksheet.Cells[row, col].Value.ToString();
                            if (col == 3) emp.MaLoai= worksheet.Cells[row, col].Value.ToString();
                            if (col == 4) emp.TenSp= worksheet.Cells[row, col].Value.ToString();
                            if (col == 5) emp.GiaSp = Convert.ToInt32(worksheet.Cells[row, col].Value.ToString());
                            if (col == 6) emp.Baohanh = Convert.ToInt32(worksheet.Cells[row, col].Value.ToString());
                            if (col == 7) emp.Sl = Convert.ToInt32(worksheet.Cells[row, col].Value.ToString());
                            if (col == 8) emp.Mota = worksheet.Cells[row, col].Value.ToString();

                        }
                        table.Add(emp);
                    }
                }
                ////Add Table Database
                foreach (var item in table)
                {
                    try
                    {
                        var check = await sanphamService.GetProductByExcel(item.MaSp);
                        if (check != null)
                        {
                            sanphamdto.MaSp = item.MaSp;
                            sanphamdto.MaHsx = item.MaHsx;
                            sanphamdto.MaLoai = item.MaLoai;
                            sanphamdto.TenSp = item.TenSp;
                            sanphamdto.GiaSp = item.GiaSp;
                            sanphamdto.Baohanh = item.Baohanh;
                            sanphamdto.Mota = item.Mota;
                            sanphamdto.Sl = item.Sl;
                            await sanphamService.EditSanpham(item.MaSp, sanphamdto);
                        }
                    }
                    catch (Exception ex)
                    {
                        sanphamdto.MaSp = item.MaSp;
                        sanphamdto.MaHsx = item.MaHsx;
                        sanphamdto.MaLoai = item.MaLoai;
                        sanphamdto.TenSp = item.TenSp;
                        sanphamdto.GiaSp = item.GiaSp;
                        sanphamdto.Baohanh = item.Baohanh;
                        sanphamdto.Mota = item.Mota;
                        sanphamdto.Sl = item.Sl;
                        await sanphamService.CreateSanpham(sanphamdto);
                    }
                }
                toastService.ShowSuccess("Thêm thành công", "Thành công !");
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }
        }
    }

    private async void Close()
    {
        await this.ModalInstance.CancelAsync();
    }
}
