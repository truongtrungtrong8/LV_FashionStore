@page "/Sanpham/Index"
@using Blazored.Modal.Services
@using Model
@using Model.DataDB
@using Models.Page
@using Web_Admin_Client.Pages.Modal
@inject IJSRuntime JS
@layout MainLayout
@using System.Globalization
@using Web_Admin_Client.Service
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager NavigationManager;



        <div class="main-panel">
          <div class="content-wrapper">
            <div class="page-header">
              <h3 class="page-title"> Quản lý sản phẩm</h3>
                    <SearchForm OnSearchChanged="SearchChanged" />
                    <button class="btn btn-block btn-lg btn-gradient-primary mdi mdi-playlist-plus" @onclick="() => Submit(ModalSize.Custom,ModalPosition.Custom)">Thêm sản phẩm mới !</button>     
            </div>
            <div class="row">

              <div class="col-lg-12 grid-margin stretch-card">
                <div class="card">
                  <div class="card-body">
                    <h4 class="card-title"></h4>
                    <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Chỉnh sửa</th>
                                    <th>Ảnh mô tả</th>
                                    <th>Tên sản phẩm</th>
                                    <th>Giá</th>
                                </tr>
                             </thead>
                            <tbody>
                                    @foreach (var item in sanpham)
                                    {
                                    <tr>
                                        <td>
                                            <a class="nav-link dropdown-toggle" id="profileDropdown" href="#" data-bs-toggle="dropdown" aria-expanded="false">
                                            </a>
                                            <div class="dropdown-menu navbar-dropdown" aria-labelledby="profileDropdown">
                                                <a class="dropdown-item" @onclick="() => Edit_SP(item.MaSp,ModalSize.Custom,ModalPosition.Custom)">
                                                    <i class="mdi mdi-tooltip-edit me-2 text-success"></i> Chỉnh sửa
                                                </a>
                                                <div class="dropdown-divider"></div>
                                                <a class="dropdown-item" href="#">
                                                    <i class="mdi mdi-playlist-remove me-2 text-danger"></i> Xóa
                                                </a>
                                            </div>
                                        </td>
                                        <td class="py-1">
                                            <img src="@urlImage/images/@item.HaBia" alt="image" />
                                        </td>
                                        <td> @item.TenSp </td>
                                        <td>
                                                @sanphamservice.FormatVND(item.GiaSp) VND
                                        </td>

                                    </tr>
                                    }
                            </tbody>
                    </table>
                  </div>
                   <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage"></Pagination>
                </div>
              </div>

            </div>
          </div>
          </div>





@code {
    string urlImage = "https://localhost:7268";
    private Web_Admin_Client.Pages.Sanpham.Create modal { get; set; }
    private Web_Admin_Client.Pages.Sanpham.Edit modalEdit { get; set; }


    List<Sanpham_Model> sanpham = new List<Sanpham_Model>();
    SanphamService sanphamservice = new SanphamService();
    public MetaData MetaData { get; set; } = new MetaData();
    private PagingParameters paging = new PagingParameters();
    [CascadingParameter] public IModalService Modal { get; set; } = default!;
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
    private string? result { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {

            await GetProducts();

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }

    }
    public async void Edit_SP(string id, ModalSize size, ModalPosition position)
    {
        await sessionStorage.SetItemAsync("sp_id", id);
        var options = new ModalOptions { Size = size, Position = position, DisableBackgroundCancel = true, HideCloseButton = true };
        if (size == ModalSize.Custom)
            options.SizeCustomClass = "my-custom-size";
        if (position == ModalPosition.Custom)
            options.PositionCustomClass = "my-custom-position";
        Modal.Show<Edit>("Chỉnh sửa thông tin", options);

    }
    public async void Submit(ModalSize size, ModalPosition position)
    {
        var options = new ModalOptions { Size = size, Position = position, DisableBackgroundCancel = true, HideCloseButton = true };
        if (size == ModalSize.Custom)
            options.SizeCustomClass = "my-custom-size";
        if (position == ModalPosition.Custom)
            options.PositionCustomClass = "my-custom-position";
        Modal.Show<Create>("Thêm sản phẩm",options);
    }
    private async Task SelectedPage(int page)
    {
        paging.PageNumber = page;
        await GetProducts();
    }
    private async Task GetProducts()
    {
        var pagingResponse = await sanphamservice.GetListPageSp(paging);
        sanpham = pagingResponse.Items;
        MetaData = pagingResponse.MetaData;
    }
    private async Task SearchChanged(string search)
    {
        paging.PageNumber = 1;
        paging.SearchTerm = search;
        await GetProducts();
    }
}
