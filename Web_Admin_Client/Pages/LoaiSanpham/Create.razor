@page "/LoaiSanpham/Create"
@using Blazored.Modal.Services
@using Model
@using Model.DataDB
@using Model.Dto
@using Models.Page
@using Web_Admin_Client.Pages.Modal
@inject IJSRuntime JS
@layout MainLayout
@using System.Globalization
@using Web_Admin_Client.Pages.Sanpham
@using Web_Admin_Client.Service
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager NavigationManager
@inject IToastService toastService


<EditForm Model="loaisanpham">
    <form class="forms-sample">

        <div class="form-group">
            <label for="exampleInputPassword1">Tên loại</label>
            <InputText class="form-control" placeholder="" @bind-Value="loaisanpham.Tenloai" @ref=tenloai></InputText>
        </div>
        
    </form>
    <button type="button" class="btn btn-gradient-primary" @onclick="Create_Loai" style="margin-left:19%">Lưu</button>
    <button type="button" class="btn btn-gradient-primary" data-dismiss="modal" @onclick="Close" style="margin-left:19%">Hủy</button>
</EditForm>

@code {
    LoaiDto loaisanpham = new LoaiDto();
    LoaiSpService loaiSpService = new LoaiSpService();
    List<LoaiSp> loaisamphamcount = new List<LoaiSp>();
    private InputText tenloai;
    private int count { get; set; }
    private int maloai { get; set; }
    private string check { get; set; }
    [CascadingParameter] public IModalService Modal { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    protected override async Task OnInitializedAsync()
    {
        loaisamphamcount = await loaiSpService.GetCountLoai();
        count = loaisamphamcount.Count;
        maloai = count + 1;
        check = ("L" + maloai).ToString();
    }

    private async void Create_Loai()
    {
        try
        {
            loaisanpham = await loaiSpService.GetLoaiSp(check);
            if (loaisanpham != null)
            {

                loaisanpham.MaLoai = ("L" + (maloai + 2)).ToString();
                loaisanpham.Tenloai = tenloai.Value;
                await loaiSpService.CreateLoai(loaisanpham);
                NavigationManager.NavigateTo("/LoaiSanpham/Index", forceLoad: true);
                toastService.ShowSuccess("Thêm thành công", "Thành công !");
            }
        }
        catch (Exception ex)
        {
            loaisanpham.MaLoai = ("L" + maloai).ToString();
            loaisanpham.Tenloai = tenloai.Value;
            await loaiSpService.CreateLoai(loaisanpham);
            NavigationManager.NavigateTo("/LoaiSanpham/Index", forceLoad: true);
            toastService.ShowSuccess("Thêm thành công", "Thành công !");
        }

    }
    private async void Close()
    {
        await this.ModalInstance.CancelAsync();
    }
}
