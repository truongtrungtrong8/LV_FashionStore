@page "/Taikhoan/Delete/{id}"
@inject IJSRuntime JS
@using Model
@using Model.DataDB
@using Model.Dto
@using Web_Admin_Client.Service
@inject NavigationManager NavigationManager;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage


<EditForm Model="taikhoan">
    <form class="forms-sample">
        <div class="form-group">
            <label for="exampleInputUsername1">Tên tài khoản</label>
            <InputText class="form-control" placeholder="" @bind-Value="taikhoan.TenTk"></InputText>
        </div>
    </form>
    <button type="button" class="btn btn-gradient-primary me-2" @onclick="Submit" style="margin-left:19%">Xóa</button>
    <button type="button" class="btn btn-gradient-primary me-2" @onclick="Close" style="margin-left:19%">Hủy</button>
</EditForm>

@code {
    [Parameter]
    public string id { get; set; }
    private TaikhoanDto taikhoan = new TaikhoanDto();
    TaiKhoanService taiKhoanService = new TaiKhoanService();
    [CascadingParameter] public IModalService Modal { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }


    protected async override Task OnInitializedAsync()
    {

        var tk_id = await sessionStorage.GetItemAsync<string>("tk_idDelete");
        var result = await taiKhoanService.GetTaikhoan(tk_id);
        taikhoan.TenTk = result.TenTk;

    }
    private async void Submit()
    {
        var tk_id = await sessionStorage.GetItemAsync<string>("tk_idDelete");
        await taiKhoanService.DeleteTaikhoan(tk_id);
        NavigationManager.NavigateTo("/Taikhoan/Index",forceLoad:true);

    }
    private async void Close()
    {
        await this.ModalInstance.CancelAsync();
    }
}
