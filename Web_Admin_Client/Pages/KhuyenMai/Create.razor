@page "/KhuyenMai/Create"
@using Blazored.Modal.Services
@using ClosedXML.Excel
@using Model
@using Model.DataDB
@using Model.Dto
@using Models.Page
@using System.Data
@using Syncfusion.XlsIO
@using Web_Admin_Client.Pages.Modal
@inject IJSRuntime JS
@layout MainLayout
@using System.Globalization
@using Web_Admin_Client.Pages.Sanpham
@using Web_Admin_Client.Service
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager NavigationManager;
@inject IToastService toastService


<EditForm Model="khuyenMai">
    <form class="forms-sample">
        <div class="form-group">
            <label for="name">Tên sản phẩm</label>
            <InputSelect class="form-select" placeholder="" @bind-Value="khuyenMai.MaSp" @ref=tensanpham>
                @foreach (var item in sanphams)
                {
                    <option value="@item.MaSp">@item.TenSp</option>
                }
            </InputSelect>
        </div>
    </form>
    <div class="form-group">
        <label for="thoigian">Thời gian khuyến mãi</label>
        <InputDate class="form-control" placeholder="" @bind-Value="@_thoigiankhuyenmai" format-value="yyyy-MM-dd"></InputDate>
    </div>
    <div class="form-group">
        <label for="tile">Phần trăm khuyến mãi</label>
        <InputNumber class="form-control" placeholder="nhập từ 10-100 %" @bind-Value="@khuyenMai.Tile" @ref=tilekhuyenmai></InputNumber>
    </div>

    <button type="button" class="btn btn-gradient-primary me-2" style="margin-left:19%" @onclick = "() => CreateKhuyenMai()">Lưu</button>
    <button type="button" class="btn btn-gradient-primary me-2" style="margin-left:19%" @onclick= "() => Close()">Đóng</button>
</EditForm>


@code {
    private InputSelect<string> tensanpham;
    private InputNumber<double> tilekhuyenmai; 
    private List<Sanpham> sanphams = new List<Sanpham>();
    private SanphamService sanphamService = new SanphamService();
    private KhuyenMaiDto khuyenMai = new KhuyenMaiDto();
    private KhuyenMaiService khuyenMaiService = new KhuyenMaiService();
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    private DateTime thoigiankhuyenmai;
    public DateTime _thoigiankhuyenmai

    {
        get { return thoigiankhuyenmai; }
        set { thoigiankhuyenmai = value; }
    }

    protected override async Task OnInitializedAsync()
    {
        _thoigiankhuyenmai = DateTime.Now;
        sanphams = await sanphamService.GetAllProductQuantily();
    }
    private async Task CreateKhuyenMai()
    {
        khuyenMai.MaSp = tensanpham.Value;
        khuyenMai.Thoigian = _thoigiankhuyenmai;
        //var temp = _thoigiankhuyenmai.Day - DateTime.Now.Day;
        //Console.WriteLine(temp);
        khuyenMai.Tile = (tilekhuyenmai.Value) / 100;
        await khuyenMaiService.CreateKhuyenMai(khuyenMai);
        NavigationManager.NavigateTo("/KhuyenMai/Index");
        toastService.ShowSuccess("Thêm thành công", "Thành công !");
    }
    private async void Close()
    {
       await ModalInstance.CloseAsync();

    }
}
