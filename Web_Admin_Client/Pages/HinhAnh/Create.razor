@page "/HinhAnh/Create"
@using Model
@using Model.DataDB
@using Tewr.Blazor.FileReader
@using Web_Admin_Client.Service
@inject NavigationManager NavigationManager
@inject IToastService toastService

@inject IFileReaderService fileReader
@inject HttpClient client


<EditForm Model="images">
    <form class="forms-sample">
        <div class="form-group">
            <label for="exampleInputUsername1"></label>
            <InputSelect class="form-select" placeholder="" @bind-Value="images.MaSp" @ref=tensanpham>
                @foreach (var item in sanphams)
                {
                    <option value="@item.MaSp">@item.TenSp</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="exampleInputEmail1">Hình ảnh</label>
            <input type="file" @ref=elementReference multiple />
        </div>
       
    </form>

    <button type="button" class="btn btn-gradient-primary me-2" style="margin-left:19%" @onclick="() => UploadFileAsync()">Lưu</button>
    <button type="button" class="btn btn-gradient-primary me-2" style="margin-left:19%">Đóng</button>
</EditForm>

@code {

    ElementReference elementReference;
    string imagePath = "";
    string type = "";
    string size = "";
    Stream fileStream = null;

    private InputSelect<string> tensanpham;

    private Images_Model images = new Images_Model();
    private HinhanhService hinhanhService = new HinhanhService();
    private List<Sanpham> sanphams = new List<Sanpham>();
    private SanphamService sanphamService = new SanphamService();


    protected override async Task OnInitializedAsync()
    {
        sanphams = await sanphamService.GetAllProductQuantily();
    }


    private async Task UploadFileAsync()
    {
        ImageDto image = new ImageDto();
        var files = (await fileReader.CreateReference(elementReference).EnumerateFilesAsync()).ToList();
        
           
        int i = 0;
        string[] fileName = new string[files.Count];
        try
        {
            if (files.Count == 0)
            {
                toastService.ShowWarning("Bạn chưa chọn ảnh ", "Không thành công !");
                NavigationManager.NavigateTo("/Hinhanh/Index");
            }
            if (files.Count > 0 && files.Count < 4)
            {
                foreach (var file in files)
                {

                    var fileInfo = await file.ReadFileInfoAsync();
                    fileName[i] = fileInfo.Name;
                    size = $"{fileInfo.Size}b";
                    type = fileInfo.Type;

                    using (var memoryStream = await file.CreateMemoryStreamAsync((int)fileInfo.Size))
                    {
                        fileStream = new MemoryStream(memoryStream.ToArray());
                    }
                    try
                    {
                        //string fileNameNew = "";
                        string url = "https://localhost:7268";
                        var content = new MultipartFormDataContent();
                        content.Headers.ContentDisposition = new System.Net.Http.Headers.ContentDispositionHeaderValue("form-data");
                        //string extension = Path.GetExtension(fileName);
                        //string[] allow = { ".jpg", ".png" };
                        //if (allow.Contains(extension.ToLower()))
                        //    fileNameNew = $"{Guid.NewGuid()}{extension}";
                        content.Add(new StreamContent(fileStream, (int)fileStream.Length), "image", fileName[i]);
                        var respone = await client.PostAsync($"{url}/api/Image/PostImage", content);

                        if (respone.IsSuccessStatusCode)
                        {
                            image.MaSp = tensanpham.Value;
                            if (files.Count == 1)
                                image.HaBia = fileName[0];
                            if (files.Count == 2)
                            {
                                image.HaBia = fileName[0];
                                image.Ha1 = fileName[1];
                            }
                            if (files.Count == 3)
                            {
                                image.HaBia = fileName[0];
                                image.Ha1 = fileName[1];
                                image.Ha2 = fileName[2];
                            }
                        }
                        i++;
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine(ex.ToString());
                    }

                }
                await hinhanhService.AddImage(image);
                NavigationManager.NavigateTo("/Hinhanh/Index",forceLoad:true);
                toastService.ShowSuccess("Thêm thành công !", "Chúc mừng ");
            }
            if(files.Count > 3)
            {
                toastService.ShowWarning("Số ảnh được chọn nhiều nhất là 3", "Không thành công !");
                NavigationManager.NavigateTo("/Hinhanh/Index");
            }
        }
       catch(Exception ex)
       {
            
       }
       
    }
}

