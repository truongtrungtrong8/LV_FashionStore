@page "/Detail/{id}"
@using Model
@using Model.DataDB
@using Model.Dto
@using Web_Client.Pages.Cart
@using Web_Client.Services
@inject IJSRuntime JS
@layout MainLayout
@inject NavigationManager NavigationManager 
@inject Blazored.LocalStorage.ILocalStorageService localstorage
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IToastService toastService


    <!-- Breadcrumb Start -->
    <div class="container-fluid">
        <div class="row px-xl-5">
            <div class="col-12">
                <nav class="breadcrumb bg-light mb-30">
                    <a class="breadcrumb-item text-dark" href="#">Trang chủ</a>
                    <a class="breadcrumb-item text-dark" href="#">Sản phẩm</a>
                    <span class="breadcrumb-item active">Chi tiết sản phẩm</span>
                </nav>
            </div>
        </div>
    </div>
    <!-- Breadcrumb End -->

<!-- Shop Detail Start -->
<div class="container-fluid pb-5">
    <div class="row px-xl-5">
        <div class="col-lg-5 mb-30">
            <div id="product-carousel" class="carousel slide" data-ride="carousel">
                <div class="carousel-inner bg-light">
                    <div class="carousel-item active">
                        <img class="w-100 h-100" src="@urlimage/images/@sanpham.HaBia" alt="Image">
                    </div>
                    <div class="carousel-item">
                        <img class="w-100 h-100" src="@urlimage/images/@sanpham.Ha1" alt="Image">
                    </div>
                    <div class="carousel-item">
                        <img class="w-100 h-100" src="@urlimage/images/@sanpham.Ha2" alt="Image">
                    </div>
                    
                </div>
                <a class="carousel-control-prev" href="#product-carousel" data-slide="prev">
                    <i class="fa fa-2x fa-angle-left text-dark"></i>
                </a>
                <a class="carousel-control-next" href="#product-carousel" data-slide="next">
                    <i class="fa fa-2x fa-angle-right text-dark"></i>
                </a>
            </div>
        </div>

        <div class="col-lg-7 h-auto mb-30">
            <div class="h-100 bg-light p-30">
                <h3>@sanpham.TenSp</h3>
                <div class="d-flex mb-3">
                    <div class="text-primary mr-2">
                        <small class="fas fa-star"></small>
                        <small class="fas fa-star"></small>
                        <small class="fas fa-star"></small>
                        <small class="fas fa-star-half-alt"></small>
                        <small class="far fa-star"></small>
                    </div>
                    <small class="pt-1">(99 Reviews)</small>
                </div>
                @if (sanpham.Thoigian.Date == DateTime.Now.Date)
                {
                    <h5>Đã hết thời gian khuyến mãi</h5>
                    <h4 class="font-weight-semi-bold mb-4"><del>@sanphamService.FormatVND(sanpham.GiaSp) VND</del></h4>
                    <h3 class="font-weight-semi-bold mb-4" style="color:red">@sanphamService.FormatVND(sanpham.GiaSp) VND</h3>
                }
                @if ( sanpham.Thoigian.Date < DateTime.Now.Date)
                {
                    <h5>Đã hết thời gian khuyến mãi</h5>
                    <h4 class="font-weight-semi-bold mb-4"><del>@sanphamService.FormatVND(sanpham.GiaSp) VND</del></h4>
                    <h3 class="font-weight-semi-bold mb-4" style="color:red">@sanphamService.FormatVND(sanpham.GiaSp) VND</h3>
                }
                @if(sanpham.Thoigian.Date > DateTime.Now.Date)
                {
                    <h5>Khuyến mãi còn @(sanpham.Thoigian.DayOfYear - DateTime.Now.DayOfYear) ngày đến @sanpham.Thoigian.Day/@sanpham.Thoigian.Month/@sanpham.Thoigian.Year</h5>
                    <h4 class="font-weight-semi-bold mb-4"><del>@sanphamService.FormatVND(sanpham.GiaSp) VND</del></h4>
                    <h6 style="color:red">-@(sanpham.Tile * 100)%</h6>
                    <h3 class="font-weight-semi-bold mb-4" style="color:red">@sanphamService.FormatVND(sanpham.GiaSp-(sanpham.GiaSp*sanpham.Tile)) VND</h3>
                }
                
                <p class="mb-4">
                    @sanpham.Mota
                </p>
                <div class="d-flex mb-3">
                    <strong class="text-dark mr-3">Sizes:</strong>
                   
                    <EditForm Model="cTGioHangDto">
                        <InputRadioGroup @bind-Value=@cTGioHangDto.Size @ref=checkSize>
                            @foreach(var item in sizeList)
                            {
                                <div class="custom-control custom-radio custom-control-inline">
                                <InputRadio class="custom-control-input" id="@item.MaSize" Value="@item.TenSize" />
                                <label class="custom-control-label" for="@item.MaSize"> @item.TenSize </label>
                                </div>
                            }
                        </InputRadioGroup>
                    </EditForm>
                </div>
                <div class="d-flex mb-4">
                    <strong class="text-dark mr-3">Màu:</strong>
                    <EditForm Model="cTGioHangDto">
                        <InputRadioGroup @bind-Value=@cTGioHangDto.Mau @ref=checkMau>
                            @foreach (var item in mauList)
                            {
                                <div class="custom-control custom-radio custom-control-inline">
                                    <InputRadio class="custom-control-input" id="@item.Mamau" Value="@item.Tenmau" />
                                    <label class="custom-control-label" for="@item.Mamau"> @item.Tenmau </label>
                                </div>
                            }
                        </InputRadioGroup>
                    </EditForm>
                </div>
                
                <div class="d-flex align-items-center mb-4 pt-2">
                    <div class="input-group quantity mr-3" style="width: 130px;">
                        <EditForm Model="cTGioHangDto">

                            <InputNumber id="quantity" @bind-Value="@cTGioHangDto.Sl" @ref=Sl min = "0" max = "@tonkho.Sl"
                                         class="form-control bg-secondary border-0 text-center" style="width: 70px" />

                        </EditForm>
                    </div>
                    @if(tonkho.Sl == 0 || tonkho.Sl < Sl.Value)
                    {
                        <div class="input-group quantity mr-3" style="width: 30%;">
                            <div class="input-group-btn">
                                <button type="button" disabled class="btn btn-primary px-3" @onclick="AddToCart">
                                    <i class="fa fa-shopping-cart mr-1"></i> Thêm vào giỏ hàng
                                </button>
                            </div>
                        </div>

                        <div class="input-group quantity mr-3" style="width: 25%;">
                            <div class="input-group-btn">
                                <button type="button" disabled class="btn btn-primary px-3" @onclick="CheckBuyNow">
                                    <i class="fa fa-shopping-cart mr-1"></i> Mua Ngay
                                </button>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="input-group quantity mr-3" style="width: 30%;">
                            <div class="input-group-btn">
                                <button type="button" class="btn btn-primary px-3" @onclick="AddToCart">
                                    <i class="fa fa-shopping-cart mr-1"></i> Thêm vào giỏ hàng
                                </button>
                            </div>
                        </div>

                        <div class="input-group quantity mr-3" style="width: 25%;">
                            <div class="input-group-btn">
                                <button type="button" class="btn btn-primary px-3" @onclick="CheckBuyNow">
                                    <i class="fa fa-shopping-cart mr-1"></i> Mua Ngay
                                </button>
                            </div>
                        </div>
                    }

                </div>
                <div class="d-flex pt-2">
                    @if(tonkho == null)
                    {
                        <strong class="text-dark mr-2">Số lượng sản phẩm: @sanpham.Sl sản phẩm</strong>
                    }
                    else {
                         <strong class="text-dark mr-2">Số lượng sản phẩm: @tonkho.Sl sản phẩm</strong>
                    }
                   
                    <div class="d-inline-flex">
                        <a class="text-dark px-2" href="">
                            <i class="fab fa-facebook-f"></i>
                        </a>
                        <a class="text-dark px-2" href="">
                            <i class="fab fa-twitter"></i>
                        </a>
                        <a class="text-dark px-2" href="">
                            <i class="fab fa-linkedin-in"></i>
                        </a>
                        <a class="text-dark px-2" href="">
                            <i class="fab fa-pinterest"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--Review-->
    <div class="row px-xl-5">
        <div class="col">
            <div class="bg-light p-30">
                <div class="nav nav-tabs mb-4">
                    <a class="nav-item nav-link text-dark" >Đánh giá : @countReviewByPro</a>
                </div>
                <div class="tab-content">
                        <div class="row">
                            <div class="col-md-6">
                                @foreach(var item in danhgiaList)
                                {
                                    <div class="media mb-4">
                                    <img src="@urlimage/images/userPicture/user.jpg" alt="Image" class="img-fluid mr-3 mt-1" style="width: 45px;">
                                    <div class="media-body">
                                        <h6>@item.TenKh<small> - <i>@item.NgayDanhGia.ToString("dd/MM/yyyy HH:mm:ss")</i></small></h6>
                                        <div class="text-primary mb-2">
                                        @for(int i=1; i<=item.BinhChon;i++)
                                        {
                                          <i class="fas fa-star"></i>
                                        }
                                        </div>
                                        <p>@item.DanhGia</p>
                                    </div>
                                </div>
                                }
                                
                            </div>
                        </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Shop Detail End -->


<Footer/>



@code {
    string urlimage = "https://localhost:7268";

    public InputRadioGroup<string> checkSize { get; set; }
    public InputRadioGroup<string> checkMau { get; set; }
    private InputNumber<int> Sl { get; set; }


    Sanpham_Model sanpham = new Sanpham_Model();

    private List<Size> sizeList = new List<Size>();
    SizeService sizeService = new SizeService();

    private List<Mau> mauList = new List<Mau>();
    MauService mauService = new MauService();

    private CartItems cartItem = new CartItems { Sl = 1 };
    public List<CartItems> cartItems_List = new List<CartItems>();
    public int countCart { get; set; }
    public int MaGh { get; set; }

    private string name { get; set; }
    GioHangDto gioHangDto = new GioHangDto();
    CTGioHangDto cTGioHangDto = new CTGioHangDto();

    List<CtGh> list_ctgiohang = new List<CtGh>();
    List<Giohang> giohangList = new List<Giohang>();

    GioHangService gioHangService = new GioHangService();
    CTGioHangService cTGioHangService = new CTGioHangService();

    Khachhang khachhang = new Khachhang();
    KhachHangService khachHangService = new KhachHangService();
    List<Khachhang> khachhangs = new List<Khachhang>();
    KhachHangDto newkhachang = new KhachHangDto();

    TonkhoDto tonkho = new TonkhoDto();
    TonkhoService tonkhoService = new TonkhoService();

    DanhGiaDto danhGia = new DanhGiaDto();
    List<DanhGiaDto> danhgiaList = new List<DanhGiaDto>();
    DanhGiaService danhGiaService = new DanhGiaService();
    private int countReviewByPro { get; set; }


    DonDatDto dondatDto = new DonDatDto();
    List<DonDatDto> listDonDat = new List<DonDatDto>();
    DonDatService donDatService = new DonDatService();
    CtDonDatDto ctDonDatDto = new CtDonDatDto();
    CtDonDatService CtDonDatService = new CtDonDatService();

    SanphamService sanphamService = new SanphamService();
    [CascadingParameter] public IModalService Modal { get; set; }

    private string name_khLogin;
    private string ma_khLogin;
    private string name_khCreate;
    private string ma_khCreate;
    private int CountDonDat { get; set; }
    private int MaDonDat { get; set; }
    public string deCode { get; set; }
    [Parameter]
    public string Id { get; set; }
    private string display ;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            name_khCreate = await sessionStorage.GetItemAsync<string>("ten_kh1");
            name_khLogin = await sessionStorage.GetItemAsync<string>("ten_kh");
            ma_khCreate = await sessionStorage.GetItemAsync<string>("ma_khachhangCreate");
            ma_khLogin = await sessionStorage.GetItemAsync<string>("ma_khachhang");
            var getvnpcheck = await sessionStorage.GetItemAsync<string>("vnpcheckcode");
            var checksendmail = await sessionStorage.GetItemAsync<string>("checksendmail");
            var emailkh = await sessionStorage.GetItemAsync<string>("emailkh");
            if (getvnpcheck == "00")
            {
                await sessionStorage.RemoveItemAsync("vnpcheckcode");
                await BuyNow();
                toastService.ShowSuccess("Thanh toán thành công !", "Thành công");
            }
            if (checksendmail == "ok")
            {
                await sessionStorage.RemoveItemAsync("checksendmail");
                await BuyNow();
                toastService.ShowSuccess("Mời bạn kiểm tra email " + emailkh, "Thành công");
                await sessionStorage.RemoveItemAsync("emailkh");
            }
        }
    }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            listDonDat = await donDatService.GetCountDonDat();
            CountDonDat = listDonDat.Count;
            MaDonDat = CountDonDat + 1;
            deCode = sanphamService.DeCodeMd5(Id);
            sanpham = await sanphamService.GetProduct(deCode);
            danhgiaList = await danhGiaService.GetListDanhGiaByPro(deCode);
            sizeList = await sizeService.GetListSize();
            mauList = await mauService.GetListMau();
            countReviewByPro = danhgiaList.Count();
            try
            {
                tonkho = await tonkhoService.GetTonkho(deCode);
            }
            catch (Exception ex)
            {
                tonkho = null;
            }
        }
        catch (Exception ex)
        {
            toastService.ShowWarning("Bạn không thể truy cập", "Cảnh báo !");
            NavigationManager.NavigateTo("/");
        }
    }

    private async Task AddToCart()
    {

        name_khCreate = await sessionStorage.GetItemAsync<string>("ten_kh1");
        name_khLogin = await sessionStorage.GetItemAsync<string>("ten_kh");

        ma_khCreate = await sessionStorage.GetItemAsync<string>("ma_khachhangCreate");
        ma_khLogin = await sessionStorage.GetItemAsync<string>("ma_khachhang");
        if (checkMau.Value == null || checkSize.Value == null || (checkMau.Value == null && checkSize.Value == null))
        {
            toastService.ShowWarning("Bạn chưa chọn màu hoặc size", "Không thành công !");
        }
        else
        {
            try 
            {
                if (name_khLogin != null)
                {
                    try 
                    {
                        var tempGH = "GH" + ma_khLogin;
                        Giohang check = new Giohang();
                        check = await gioHangService.GetDetail(tempGH);
                        if(check != null)
                        {
                            if (sanpham.Thoigian.Date == DateTime.Now.Date || sanpham.Thoigian.Date < DateTime.Now.Date)
                            {
                                ///Co gio hang thi sua
                                var result = await gioHangService.GetDetail(tempGH);
                                gioHangDto.MaGh = result.MaGh;
                                gioHangDto.Ngaydat = result.Ngaydat;
                                gioHangDto.MaKh = result.MaKh;
                                gioHangDto.Tongtien = Convert.ToInt32(result.Tongtien + (Sl.Value * sanpham.GiaSp) + (Sl.Value * sanpham.GiaSp)*0.02);
                                await gioHangService.Edit(tempGH, gioHangDto);
                                try
                                {
                                    //////Sua chi tiet gio hang luon
                                    var edit = await cTGioHangService.GetID(sanpham.MaSp, tempGH);
                                    if (edit != null)
                                    {
                                        cTGioHangDto.MaGh = edit.MaGh;
                                        cTGioHangDto.MaSp = edit.MaSp;
                                        cTGioHangDto.Sl = edit.Sl + Sl.Value;
                                        cTGioHangDto.Size = checkSize.Value;
                                        cTGioHangDto.Mau = checkMau.Value;
                                        try
                                        {
                                            if (tonkho.Sl < Sl.Value)
                                            {
                                                toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                            }
                                            else if (tonkho.Sl == 0)
                                            {
                                                toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                            }
                                            else if(edit.Sl + Sl.Value > tonkho.Sl)
                                            {
                                                toastService.ShowWarning("Sản phẩm đã có trong giỏ hàng của bạn", "Mời bạn kiểm tra giỏ hàng");
                                            }
                                            else if (tonkho.Sl >= Sl.Value)
                                            {
                                                await sessionStorage.SetItemAsync("magiohang_ctgh", cTGioHangDto.MaGh);
                                                await cTGioHangService.Edit(sanpham.MaSp, tempGH, cTGioHangDto);
                                                toastService.ShowSuccess("Mời bạn tiếp tục mua hàng!", "Thêm thành công !");
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            toastService.ShowWarning("Có lỗi trong quá trình xữ lý !", "Không thành công !");
                                        }
                                    }
                                }
                                catch (Exception ex)
                                {
                                    //var edit = await cTGioHangService.GetID(item.MaSp, tempGH);
                                    cTGioHangDto.MaGh = tempGH;
                                    cTGioHangDto.MaSp = sanpham.MaSp;
                                    cTGioHangDto.Sl = Sl.Value;
                                    cTGioHangDto.Size = checkSize.Value;
                                    cTGioHangDto.Mau = checkMau.Value;
                                    try
                                    {
                                        if (tonkho.Sl < Sl.Value)
                                        {
                                            toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                        }
                                        else if (tonkho.Sl == 0)
                                        {
                                            toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                        }
                                        else if (tonkho.Sl >= Sl.Value)
                                        {
                                            await sessionStorage.SetItemAsync("magiohang_ctgh", cTGioHangDto.MaGh);
                                            await cTGioHangService.Create(cTGioHangDto);
                                            toastService.ShowSuccess("Mời bạn tiếp tục mua hàng!", "Thêm thành công !");
                                        }
                                    }
                                    catch (Exception ex2)
                                    {
                                        toastService.ShowWarning("Có lỗi trong quá trình xữ lý !", "Không thành công !");
                                    }
                                }
                            }
                            else
                            {

                                ///Co gio hang thi sua
                                var result = await gioHangService.GetDetail(tempGH);
                                gioHangDto.MaGh = result.MaGh;
                                gioHangDto.Ngaydat = result.Ngaydat;
                                gioHangDto.MaKh = result.MaKh;
                                gioHangDto.Tongtien = Convert.ToInt32(result.Tongtien + ((sanpham.GiaSp - (sanpham.GiaSp * sanpham.Tile)) * Sl.Value) + ((sanpham.GiaSp - (sanpham.GiaSp * sanpham.Tile)) * Sl.Value)*0.02);
                                await gioHangService.Edit(tempGH, gioHangDto);
                                try
                                {
                                    //////Sua chi tiet gio hang luon
                                    var edit = await cTGioHangService.GetID(sanpham.MaSp, tempGH);
                                    if (edit != null)
                                    {
                                        cTGioHangDto.MaGh = edit.MaGh;
                                        cTGioHangDto.MaSp = edit.MaSp;
                                        cTGioHangDto.Sl = edit.Sl + Sl.Value;
                                        cTGioHangDto.Size = checkSize.Value;
                                        cTGioHangDto.Mau = checkMau.Value;
                                        try
                                        {
                                            if (tonkho.Sl < Sl.Value)
                                            {
                                                toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                            }
                                            else if (tonkho.Sl == 0)
                                            {
                                                toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                            }
                                            else if (tonkho.Sl >= Sl.Value)
                                            {
                                                await sessionStorage.SetItemAsync("magiohang_ctgh", cTGioHangDto.MaGh);
                                                await cTGioHangService.Edit(sanpham.MaSp, tempGH, cTGioHangDto);
                                                toastService.ShowSuccess("Mời bạn tiếp tục mua hàng!", "Thêm thành công !");
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            toastService.ShowWarning("Có lỗi trong quá trình xữ lý !", "Không thành công !");
                                        }
                                    }
                                }
                                catch (Exception ex)
                                {
                                    //var edit = await cTGioHangService.GetID(item.MaSp, tempGH);
                                    cTGioHangDto.MaGh = tempGH;
                                    cTGioHangDto.MaSp = sanpham.MaSp;
                                    cTGioHangDto.Sl = Sl.Value;
                                    cTGioHangDto.Size = checkSize.Value;
                                    cTGioHangDto.Mau = checkMau.Value;
                                    try
                                    {
                                        if (tonkho.Sl < Sl.Value)
                                        {
                                            toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                        }
                                        else if (tonkho.Sl == 0)
                                        {
                                            toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                        }
                                        else if (tonkho.Sl >= Sl.Value)
                                        {
                                            await sessionStorage.SetItemAsync("magiohang_ctgh", cTGioHangDto.MaGh);
                                            await cTGioHangService.Create(cTGioHangDto);
                                            toastService.ShowSuccess("Mời bạn tiếp tục mua hàng!", "Thêm thành công !");
                                        }
                                    }
                                    catch (Exception ex2)
                                    {
                                        toastService.ShowWarning("Có lỗi trong quá trình xữ lý !", "Không thành công !");
                                    }
                                }
                            }
                        }
                    }
                    catch(Exception ex)
                    {
                        if (sanpham.Thoigian.Date == DateTime.Now.Date || sanpham.Thoigian.Date < DateTime.Now.Date)
                        {
                            /////Chua co gio hang thi them moi
                            gioHangDto.MaGh = "GH" + ma_khLogin;
                            gioHangDto.Ngaydat = DateTime.Now;
                            gioHangDto.MaKh = ma_khLogin;
                            gioHangDto.Tongtien = Convert.ToInt32((sanpham.GiaSp * Sl.Value) + (sanpham.GiaSp * Sl.Value)*0.02);
                            await gioHangService.Create(gioHangDto);
                            //////Chi tiet gio hang them moi
                            cTGioHangDto.MaGh = gioHangDto.MaGh;
                            cTGioHangDto.MaSp = sanpham.MaSp;
                            cTGioHangDto.Sl = Sl.Value;
                            cTGioHangDto.Size = checkSize.Value;
                            cTGioHangDto.Mau = checkMau.Value;
                            try
                            {
                                if (tonkho.Sl < Sl.Value)
                                {
                                    toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                }
                                else if (tonkho.Sl == 0)
                                {
                                    toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                }
                                else if (tonkho.Sl >= Sl.Value)
                                {
                                    await sessionStorage.SetItemAsync("magiohang_ctgh", cTGioHangDto.MaGh);
                                    await cTGioHangService.Create(cTGioHangDto);
                                    toastService.ShowSuccess("Mời bạn tiếp tục mua hàng!", "Thêm thành công !");
                                }
                            }
                            catch (Exception ex2)
                            {
                                toastService.ShowWarning("Có lỗi trong quá trình xữ lý !", "Không thành công !");
                            }
                        }
                        else
                        {
                            /////Chua co gio hang thi them moi
                            gioHangDto.MaGh = "GH" + ma_khLogin;
                            gioHangDto.Ngaydat = DateTime.Now;
                            gioHangDto.MaKh = ma_khLogin;
                            gioHangDto.Tongtien = Convert.ToInt32(((sanpham.GiaSp - (sanpham.GiaSp * sanpham.Tile)) * Sl.Value) + ((sanpham.GiaSp - (sanpham.GiaSp * sanpham.Tile)) * Sl.Value)*0.02);
                            await gioHangService.Create(gioHangDto);
                            //////Chi tiet gio hang them moi
                            cTGioHangDto.MaGh = gioHangDto.MaGh;
                            cTGioHangDto.MaSp = sanpham.MaSp;
                            cTGioHangDto.Sl = Sl.Value;
                            cTGioHangDto.Size = checkSize.Value;
                            cTGioHangDto.Mau = checkMau.Value;
                            try
                            {
                                if (tonkho.Sl < Sl.Value)
                                {
                                    toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                }
                                else if (tonkho.Sl == 0)
                                {
                                    toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                }
                                else if (tonkho.Sl >= Sl.Value)
                                {
                                    await sessionStorage.SetItemAsync("magiohang_ctgh", cTGioHangDto.MaGh);
                                    await cTGioHangService.Create(cTGioHangDto);
                                    toastService.ShowSuccess("Mời bạn tiếp tục mua hàng!", "Thêm thành công !");
                                }
                            }
                            catch (Exception ex2)
                            {
                                toastService.ShowWarning("Có lỗi trong quá trình xữ lý !", "Không thành công !");
                            }
                        }

                    }
                }
                else if (name_khCreate != null)
                {
                    try
                    {
                        var tempGH = "GH" + ma_khCreate;
                        Giohang check = new Giohang();
                        check = await gioHangService.GetDetail(tempGH);
                        if (check != null)
                        {
                            if (sanpham.Thoigian.Date == DateTime.Now.Date || sanpham.Thoigian.Date < DateTime.Now.Date)
                            {
                                ///Co gio hang thi sua
                                var result = await gioHangService.GetDetail(tempGH);
                                gioHangDto.MaGh = result.MaGh;
                                gioHangDto.Ngaydat = result.Ngaydat;
                                gioHangDto.MaKh = result.MaKh;
                                gioHangDto.Tongtien = Convert.ToInt32(result.Tongtien + (Sl.Value * sanpham.GiaSp) + (Sl.Value * sanpham.GiaSp) * 0.02);
                                await gioHangService.Edit(tempGH, gioHangDto);
                                try
                                {
                                    //////Sua chi tiet gio hang luon
                                    var edit = await cTGioHangService.GetID(sanpham.MaSp, tempGH);
                                    if (edit != null)
                                    {
                                        cTGioHangDto.MaGh = edit.MaGh;
                                        cTGioHangDto.MaSp = edit.MaSp;
                                        cTGioHangDto.Sl = edit.Sl + Sl.Value;
                                        try
                                        {
                                            if (tonkho.Sl < Sl.Value)
                                            {
                                                toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                            }
                                            else if (tonkho.Sl == 0)
                                            {
                                                toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                            }
                                            else if (tonkho.Sl >= Sl.Value)
                                            {
                                                await sessionStorage.SetItemAsync("magiohang_ctgh", cTGioHangDto.MaGh);
                                                await cTGioHangService.Edit(sanpham.MaSp, tempGH, cTGioHangDto);
                                                toastService.ShowSuccess("Mời bạn tiếp tục mua hàng!", "Thêm thành công !");
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            toastService.ShowWarning("Có lỗi trong quá trình xữ lý !", "Không thành công !");
                                        }
                                    }
                                }
                                catch (Exception ex)
                                {
                                    //var edit = await cTGioHangService.GetID(item.MaSp, tempGH);
                                    cTGioHangDto.MaGh = tempGH;
                                    cTGioHangDto.MaSp = sanpham.MaSp;
                                    cTGioHangDto.Sl = Sl.Value;
                                    try
                                    {
                                        if (tonkho.Sl < Sl.Value)
                                        {
                                            toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                        }
                                        else if (tonkho.Sl == 0)
                                        {
                                            toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                        }
                                        else if (tonkho.Sl >= Sl.Value)
                                        {
                                            await sessionStorage.SetItemAsync("magiohang_ctgh", cTGioHangDto.MaGh);
                                            await cTGioHangService.Create(cTGioHangDto);
                                            toastService.ShowSuccess("Mời bạn tiếp tục mua hàng!", "Thêm thành công !");
                                        }
                                    }
                                    catch (Exception ex2)
                                    {
                                        toastService.ShowWarning("Có lỗi trong quá trình xữ lý !", "Không thành công !");
                                    }
                                }
                            }
                            else
                            {

                                ///Co gio hang thi sua
                                var result = await gioHangService.GetDetail(tempGH);
                                gioHangDto.MaGh = result.MaGh;
                                gioHangDto.Ngaydat = result.Ngaydat;
                                gioHangDto.MaKh = result.MaKh;
                                gioHangDto.Tongtien = Convert.ToInt32(result.Tongtien + ((sanpham.GiaSp - (sanpham.GiaSp * sanpham.Tile)) * Sl.Value) + ((sanpham.GiaSp - (sanpham.GiaSp * sanpham.Tile)) * Sl.Value)*0.02);
                                await gioHangService.Edit(tempGH, gioHangDto);
                                try
                                {
                                    //////Sua chi tiet gio hang luon
                                    var edit = await cTGioHangService.GetID(sanpham.MaSp, tempGH);
                                    if (edit != null)
                                    {
                                        cTGioHangDto.MaGh = edit.MaGh;
                                        cTGioHangDto.MaSp = edit.MaSp;
                                        cTGioHangDto.Sl = edit.Sl + Sl.Value;
                                        try
                                        {
                                            if (tonkho.Sl < Sl.Value)
                                            {
                                                toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                            }
                                            else if (tonkho.Sl == 0)
                                            {
                                                toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                            }
                                            else if (tonkho.Sl >= Sl.Value)
                                            {
                                                await sessionStorage.SetItemAsync("magiohang_ctgh", cTGioHangDto.MaGh);
                                                await cTGioHangService.Edit(sanpham.MaSp, tempGH, cTGioHangDto);
                                                toastService.ShowSuccess("Mời bạn tiếp tục mua hàng!", "Thêm thành công !");
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            toastService.ShowWarning("Có lỗi trong quá trình xữ lý !", "Không thành công !");
                                        }
                                    }
                                }
                                catch (Exception ex)
                                {
                                    //var edit = await cTGioHangService.GetID(item.MaSp, tempGH);
                                    cTGioHangDto.MaGh = tempGH;
                                    cTGioHangDto.MaSp = sanpham.MaSp;
                                    cTGioHangDto.Sl = Sl.Value;
                                    try
                                    {
                                        if (tonkho.Sl < Sl.Value)
                                        {
                                            toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                        }
                                        else if (tonkho.Sl == 0)
                                        {
                                            toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                        }
                                        else if (tonkho.Sl >= Sl.Value)
                                        {
                                            await sessionStorage.SetItemAsync("magiohang_ctgh", cTGioHangDto.MaGh);
                                            await cTGioHangService.Create(cTGioHangDto);
                                            toastService.ShowSuccess("Mời bạn tiếp tục mua hàng!", "Thêm thành công !");
                                        }
                                    }
                                    catch (Exception ex2)
                                    {
                                        toastService.ShowWarning("Có lỗi trong quá trình xữ lý !", "Không thành công !");
                                    }
                                }
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        if (sanpham.Thoigian.Date == DateTime.Now.Date || sanpham.Thoigian.Date < DateTime.Now.Date)
                        {
                            /////Chua co gio hang thi them moi
                            gioHangDto.MaGh = "GH" + ma_khCreate;
                            gioHangDto.Ngaydat = DateTime.Now;
                            gioHangDto.MaKh = ma_khCreate;
                            gioHangDto.Tongtien = Convert.ToInt32(sanpham.GiaSp * Sl.Value + (sanpham.GiaSp * Sl.Value)*0.02);
                            await gioHangService.Create(gioHangDto);
                            //////Chi tiet gio hang them moi
                            cTGioHangDto.MaGh = gioHangDto.MaGh;
                            cTGioHangDto.MaSp = sanpham.MaSp;
                            cTGioHangDto.Sl = Sl.Value;
                            try
                            {
                                if (tonkho.Sl < Sl.Value)
                                {
                                    toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                }
                                else if (tonkho.Sl == 0)
                                {
                                    toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                }
                                else if (tonkho.Sl >= Sl.Value)
                                {
                                    await sessionStorage.SetItemAsync("magiohang_ctgh", cTGioHangDto.MaGh);
                                    await cTGioHangService.Create(cTGioHangDto);
                                    toastService.ShowSuccess("Mời bạn tiếp tục mua hàng!", "Thêm thành công !");
                                }
                            }
                            catch (Exception ex2)
                            {
                                toastService.ShowWarning("Có lỗi trong quá trình xữ lý !", "Không thành công !");
                            }
                        }
                        else
                        {
                            /////Chua co gio hang thi them moi
                            gioHangDto.MaGh = "GH" + ma_khCreate;
                            gioHangDto.Ngaydat = DateTime.Now;
                            gioHangDto.MaKh = ma_khCreate;
                            gioHangDto.Tongtien = Convert.ToInt32(((sanpham.GiaSp - (sanpham.GiaSp * sanpham.Tile)) * Sl.Value) + ((sanpham.GiaSp - (sanpham.GiaSp * sanpham.Tile)) * Sl.Value)*0.02);
                            await gioHangService.Create(gioHangDto);
                            //////Chi tiet gio hang them moi
                            cTGioHangDto.MaGh = gioHangDto.MaGh;
                            cTGioHangDto.MaSp = sanpham.MaSp;
                            cTGioHangDto.Sl = Sl.Value;
                            try
                            {
                                if (tonkho.Sl < Sl.Value)
                                {
                                    toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                }
                                else if (tonkho.Sl == 0)
                                {
                                    toastService.ShowError("Sản phẩm đã hết", "Sản phẩm này đã hết hàng");
                                }
                                else if (tonkho.Sl >= Sl.Value)
                                {
                                    await sessionStorage.SetItemAsync("magiohang_ctgh", cTGioHangDto.MaGh);
                                    await cTGioHangService.Create(cTGioHangDto);
                                    toastService.ShowSuccess("Mời bạn tiếp tục mua hàng!", "Thêm thành công !");
                                }
                            }
                            catch (Exception ex2)
                            {
                                toastService.ShowWarning("Có lỗi trong quá trình xữ lý !", "Không thành công !");
                            }
                        }

                    }
                }

                else
                {
                    toastService.ShowWarning("Mời bạn tạo tài khoản hoặc đăng nhập!", "Bạn chưa đăng nhập");
                }
            }
            catch(Exception ex) 
            {
                toastService.ShowWarning("Mời bạn tạo tài khoản hoặc đăng nhập!", "Bạn chưa đăng nhập");
            }
        }
    }
    private async Task BuyNow()
    {
        int getSl = await sessionStorage.GetItemAsync<int>("sl");
        var getmau = await sessionStorage.GetItemAsync<string>("mau");
        var getsize = await sessionStorage.GetItemAsync<string>("size");
        var temp = ("DDH" + MaDonDat).ToString();
        Dondathang check = new Dondathang();
        if(ma_khLogin != null)
        {
            khachhang = await khachHangService.GetKhachHang(ma_khLogin);
            //check ID don dat hang
            try
            {
                check = await donDatService.GetDonDatByDD(temp);
                if(check != null)
                {
                    dondatDto.MaDdh = ("DDH" + MaDonDat).ToString();
                }
            }
            catch(Exception ex)
            {
                dondatDto.MaDdh = ("DDH" + MaDonDat + "a").ToString();
            }
            dondatDto.MaKh = ma_khLogin;
            if (sanpham.Thoigian.Date < DateTime.Now.Date || sanpham.Thoigian.Date == DateTime.Now.Date)
                dondatDto.TongDdh = Convert.ToInt32((sanpham.GiaSp * getSl) + (sanpham.GiaSp*0.02*getSl));
            else
                dondatDto.TongDdh = Convert.ToInt32(((sanpham.GiaSp - (sanpham.GiaSp * sanpham.Tile)) * getSl) + ((sanpham.GiaSp - (sanpham.GiaSp * sanpham.Tile)) * getSl) * 0.02);
            dondatDto.Diachi = khachhang.DiachiKh;
            dondatDto.Thoigian = DateTime.Now;
            dondatDto.TinhTrang = "chua hoan thanh";
            await donDatService.CreateDonDat(dondatDto);
            //chi tiet don dat
            try
            {
                check = await donDatService.GetDonDatByDD(temp);
                if(check != null)
                {
                    ctDonDatDto.MaDdh = ("DDH" + MaDonDat).ToString();
                }
            }
            catch(Exception ex)
            {
                ctDonDatDto.MaDdh = ("DDH" + MaDonDat + "a").ToString();
            }
            ctDonDatDto.MaSp = deCode;
            ctDonDatDto.Sl = getSl;
            if(sanpham.Thoigian.Date <= DateTime.Now.Date)
                ctDonDatDto.Dg = Convert.ToInt32(sanpham.GiaSp * getSl);
            else
                ctDonDatDto.Dg = Convert.ToInt32((sanpham.GiaSp - (sanpham.GiaSp*sanpham.Tile)) * getSl);
            ctDonDatDto.Mau = getmau;
            ctDonDatDto.Size = getsize;
            ctDonDatDto.DanhGia = 0;
            await CtDonDatService.CreateCtdonDat(ctDonDatDto);
            //Ton kho
            try
            {
                sanpham = await sanphamService.GetProduct(deCode);
                tonkho = await tonkhoService.GetTonkho(deCode);
                if (tonkho != null)
                {
                    var result = await tonkhoService.GetTonkho(deCode);
                    tonkho.MaSp = result.MaSp;
                    tonkho.MaCh = result.MaCh;
                    tonkho.Sl = result.Sl - getSl;
                    tonkho.Dg = (result.Sl - getSl) * sanpham.GiaSp;
                    await tonkhoService.EditTonkho(deCode, result.MaCh, tonkho);
                }
            }
            catch (Exception ex)
            {
                tonkho.MaSp = deCode;
                tonkho.MaCh = "CH01";
                tonkho.Sl = sanpham.Sl - getSl;
                tonkho.Dg = (sanpham.Sl - getSl) * sanpham.GiaSp;
                await tonkhoService.CreateTonkho(tonkho);
            }
        }
        else
        {
            khachhang = await khachHangService.GetKhachHang(ma_khCreate);
            try
            {
                check = await donDatService.GetDonDatByDD(temp);
                if (check != null)
                {
                    dondatDto.MaDdh = ("DDH" + MaDonDat).ToString();
                }
            }
            catch (Exception ex)
            {
                dondatDto.MaDdh = ("DDH" + MaDonDat + "a").ToString();
            }
            dondatDto.MaKh = ma_khCreate;
            if (sanpham.Thoigian.Date <= DateTime.Now.Date)
                dondatDto.TongDdh = Convert.ToInt32((sanpham.GiaSp * getSl) + (sanpham.GiaSp * 0.02 * getSl));
            else
                dondatDto.TongDdh = Convert.ToInt32(((sanpham.GiaSp - (sanpham.GiaSp * sanpham.Tile)) * getSl) + ((sanpham.GiaSp - (sanpham.GiaSp * sanpham.Tile)) * getSl) * 0.02);
            dondatDto.Diachi = khachhang.DiachiKh;
            dondatDto.Thoigian = DateTime.Now;
            dondatDto.TinhTrang = "chua hoan thanh";
            await donDatService.CreateDonDat(dondatDto);
            //chi tiet don dat
            try
            {
                check = await donDatService.GetDonDatByDD(temp);
                if (check != null)
                {
                    ctDonDatDto.MaDdh = ("DDH" + MaDonDat).ToString();
                }
            }
            catch (Exception ex)
            {
                ctDonDatDto.MaDdh = ("DDH" + MaDonDat + "a").ToString();
            }
            ctDonDatDto.MaSp = deCode;
            ctDonDatDto.Sl = getSl;
            if(sanpham.Thoigian.Date <= DateTime.Now.Date)
                ctDonDatDto.Dg = Convert.ToInt32(sanpham.GiaSp * getSl);
            else
                ctDonDatDto.Dg = Convert.ToInt32((sanpham.GiaSp - (sanpham.GiaSp * sanpham.Tile)) * getSl);
            ctDonDatDto.Mau = getmau;
            ctDonDatDto.Size = getsize;
            ctDonDatDto.DanhGia = 0;
            await CtDonDatService.CreateCtdonDat(ctDonDatDto);
            //Ton kho
            try
            {
                sanpham = await sanphamService.GetProduct(deCode);
                tonkho = await tonkhoService.GetTonkho(deCode);
                if (tonkho != null)
                {
                    var result = await tonkhoService.GetTonkho(deCode);
                    tonkho.MaSp = result.MaSp;
                    tonkho.MaCh = result.MaCh;
                    tonkho.Sl = result.Sl - getSl;
                    tonkho.Dg = (result.Sl - getSl) * sanpham.GiaSp;
                    await tonkhoService.EditTonkho(deCode, result.MaCh, tonkho);
                }
            }
            catch (Exception ex)
            {
                tonkho.MaSp = deCode;
                tonkho.MaCh = "CH01";
                tonkho.Sl = sanpham.Sl - getSl;
                tonkho.Dg = (sanpham.Sl - getSl) * sanpham.GiaSp;
                await tonkhoService.CreateTonkho(tonkho);
            }
        }
    }  
    private async Task CheckBuyNow()
    {
        
        if (name_khLogin == null && name_khCreate == null)
        {
            toastService.ShowWarning("Không thể mua sản phẩm", "Bạn chưa đăng nhập");
        }
        else if(name_khLogin != null || name_khCreate != null)
        {
            await sessionStorage.SetItemAsync<string>("masp", deCode);
            await sessionStorage.SetItemAsync<int>("sl", Sl.Value);
            int giasp = 0;
            if (sanpham.Thoigian.Date <= DateTime.Now.Date)
            {
                giasp = sanpham.GiaSp;
                await sessionStorage.SetItemAsync<int>("giasp", giasp);
            }
            else
            {
                giasp = Convert.ToInt32(sanpham.GiaSp - sanpham.GiaSp * sanpham.Tile);
                await sessionStorage.SetItemAsync<int>("giasp", giasp);
            }
            await sessionStorage.SetItemAsync<string>("mau", checkMau.Value);
            await sessionStorage.SetItemAsync<string>("size", checkSize.Value);
            if (checkMau.Value == null || checkSize.Value == null)
            {
                toastService.ShowError("Bạn chưa chọn màu hoặc size !", "Mời bạn kiểm tra");
            }
            else if (Sl.Value > tonkho.Sl)
            {
                toastService.ShowWarning("Sản phẩm trong cửa hàng không đủ", "Mua không thành công");
            }
            else
                NavigationManager.NavigateTo("/Cart/BuyNow");
        }
        
    }

}


