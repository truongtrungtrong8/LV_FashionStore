@page "/"
@using Model
@using Model.DataDB
@using Model.PageIndex
@using Web_Client.Pages.Taikhoan
@using Web_Client.Services
@inject IJSRuntime JS
@layout MainLayout
@using System.Globalization
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
<PageTitle>Index</PageTitle>




    <!-- Products Start -->
    <div class="container-fluid pt-5 pb-3">

        <SearchForm OnSearchChanged="SearchChanged" />
        <h2 class="section-title position-relative text-uppercase mx-xl-5 mb-4"><span class="bg-secondary pr-3">Sản phẩm</span></h2>
        <div class="row px-xl-5">
            @foreach (var item in sanpham) 
                {
                        <div class="col-lg-3 col-md-4 col-sm-6 pb-1">
                            <div class="product-item bg-light mb-4">
                                <div class="product-img position-relative overflow-hidden">
                                    <h6 style="color: red;position: absolute;top: 3px;">Khuyến mãi đến @item.Thoigian.Day/@item.Thoigian.Month/@item.Thoigian.Year </h6>
                                    <img class="img-fluid w-100" src="@urlimage/images/@item.HaBia" alt="">
                                    <div class="product-action">
                                        <a class="btn btn-outline-dark btn-square" href=""><i class="fa fa-shopping-cart"></i></a>
                                        <a class="btn btn-outline-dark btn-square" href=""><i class="far fa-heart"></i></a>
                                        <a class="btn btn-outline-dark btn-square" href=""><i class="fa fa-sync-alt"></i></a>
                                        <a class="btn btn-outline-dark btn-square" href="/Detail/@item.MaSp"><i class="fa fa-search"></i></a>
                                    </div>
                                </div>
                                <div class="text-center py-4">
                                    <a class="h6 text-decoration-none text-truncate" href="">@item.TenSp</a>
                                    <div class="d-flex align-items-center justify-content-center mt-2">
                                        <h5 class="text-muted ml-2"><del> @sanphamservice.FormatVND(item.GiaSp) VND </del></h5>&nbsp;&nbsp;&nbsp<h6 style="color:red ;">@FormatTile(item.Tile)</h6>
                                    </div>
                                    <div class="d-flex align-items-center justify-content-center mt-2">
                                        <h5 style="color:red;">@sanphamservice.FormatVND(item.GiaSp-(item.GiaSp*item.Tile)) VND</h5>
                                    </div>
                                </div>
                            </div>
                        </div>
                }
        </div>
        <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage"></Pagination>
    </div>
    <!-- Products End -->



@code{
    string urlimage = "https://localhost:7268";
    private Web_Client.Pages.Modal modal { get; set; }
    List<Sanpham_Model> sanpham = new List<Sanpham_Model>();
    public MetaDataIndex MetaData { get; set; } = new MetaDataIndex();
    private PagingParametersIndex paging = new PagingParametersIndex();


    SanphamService sanphamservice = new SanphamService();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            try
            {
                await GetProducts();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.ToString());
            }
        }
    }
    private string FormatTile(double tile)
    {
        var temp = tile * 100;
        return ("-"+temp+"%").ToString();
    }
    protected override async Task OnInitializedAsync()
    {
        try
        {
           await GetProducts();
        }
        catch (Exception ex) {
            Console.WriteLine(ex.ToString());
        }
        
    }
    private async Task SelectedPage(int page)
    {
        paging.PageNumber = page;
        await GetProducts();
    }
    private async Task GetProducts()
    {
        var pagingResponse = await sanphamservice.GetListPageSp(paging);
        sanpham = pagingResponse.Items;
        MetaData = pagingResponse.MetaData;
    }
    private async Task SearchChanged(string search)
    {
        paging.PageNumber = 1;
        paging.SearchTerm = search;
        await GetProducts();
    }
}
