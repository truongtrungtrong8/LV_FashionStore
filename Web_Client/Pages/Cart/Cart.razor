@page "/Cart/Cart"
@using Model
@using Model.DataDB
@using Model.Dto
@using Model.Pay
@using Web_Client.Pages.Taikhoan
@using Web_Client.Services
@inject ICartService CartService
@inject ISanphamService sanpham
@layout LayoutCart
@inject IJSRuntime JS
@inject IJSRuntime JSRuntime
@using System.Net.Mail
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IToastService toastService
@inject NavigationManager NavigationManager



@if (!orderPlaced)
{
    @if (cartItems == null || cartItems.Count <= 0)
    {
        <h>Bạn chưa có sản phẩm nào trong giỏ hàng của bạn !</h>
    }
    else
    {
        <!-- Cart Start -->
        <div class="container-fluid">
            <div class="row px-xl-5">
                <div class="col-lg-8 table-responsive mb-5">
                    <table class="table table-light table-borderless table-hover text-center mb-0">
                        <thead class="thead-dark">
                            <tr>
                                <th>Sản phẩm</th>
                                <th>Giá</th>
                                <th>Số lượng</th>
                                <th>Tổng tiền</th>
                                <th>Xóa</th>
                            </tr>
                        </thead>
                        @foreach (var item in cartItems)
                        {
                            <tbody class="align-middle">
                                <tr>
                                    <td class="align-middle"><img src="@urlimage/images/@item.HaBia" alt="" style="width: 50px;"> @item.TenSp</td>
                                    <td class="align-middle">@sanpham.FormatVND(item.GiaSp) VND</td>
                                    <td class="align-middle">
                                        <div class="input-group quantity mx-auto" style="width: 100px;">
                                            @*<div class="input-group-btn">
                                                <button class="btn btn-sm btn-primary btn-minus">
                                                    <i class="fa fa-minus"></i>
                                                </button>
                                            </div>*@
                                             <EditForm Model="item">
                                                <InputNumber id="quantity" @bind-Value="@item.Sl"
                                                 class="form-control" style="width: 70px" />
                                                 
                                            </EditForm>
@*                                            <div class="input-group-btn">
                                                <button class="btn btn-sm btn-primary btn-plus">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                            </div>*@
                                        </div>
                                    </td>
                                    <td class="align-middle">@sanpham.FormatVND((item.GiaSp * item.Sl)) VND</td>
                                    <td class="align-middle"><button class="btn btn-sm btn-danger" @onclick="@(() => DeleteItem(item))"><i class="fa fa-times"></i></button></td>
                                </tr>

                            </tbody>
                        }

                    </table>
                </div>
                   <div class="col-lg-4">

                    <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Thông tin thanh toán</span></h5>
                    <div class="bg-light p-30 mb-5">
                        <div class="border-bottom pb-2">
                            <div class="d-flex justify-content-between mb-3">
                                <h6>Chưa VAT</h6>
                                <h6>@sanpham.FormatVND(@cartItems.Sum(item =>(item.GiaSp * item.Sl))) VND</h6>
                            </div>
                            <div class="d-flex justify-content-between">
                                <h6 class="font-weight-medium">Phí VAT</h6>
                                <h6 class="font-weight-medium">2%</h6>
                            </div>
                        </div>
                        <div class="pt-2">
                            <div class="d-flex justify-content-between mt-2">
                                <h5>Tổng tiền</h5>
                                <h5>(@cartItems.Count): @sanpham.FormatVND(int.Parse(@cartItems.Sum(item =>(item.GiaSp * item.Sl)+(item.GiaSp * item.Sl)*0.02).ToString())) VND</h5>
                            </div>

                           @* <button class="btn btn-block btn-primary font-weight-bold my-3 py-3" @onclick="@(() => Payment())">Thanh toán trước</button>
                            <button class="btn btn-block btn-primary font-weight-bold my-3 py-3">Thanh toán khi nhận hàng</button>*@
                              <a class="btn d-flex align-items-center justify-content-between bg-primary w-100" data-toggle="collapse" href="#pay" style="height: 65px; padding: 0 30px;">
                            <h6 class="text-dark m-0" style="font-size:16px"><i class="fa-brands fa-cc-amazon-pay"></i> Chọn hình thức thanh toán</h6>
                            <i class="fa fa-angle-down text-dark"></i>
                            </a>
                            <div class="collapse position-absolute navbar navbar-vertical navbar-light align-items-start p-0 bg-light" id="pay" style="width: calc(100% - 92px); z-index: 999; ">
                             
                                <button type="button" style="display: @display" class="nav-item nav-link" @onclick="@(() =>Submit(ModalSize.Medium,ModalPosition.TopCenter))">Thanh toán trước</button>
                                <button type="button" style="display: @display1" class="nav-item nav-link" @onclick="@(() =>SendMail())">Thanh toán khi nhận hàng</button>
                                <button type="button" style="display: @display2" class="nav-item nav-link" @onclick="@(() =>Ivoice(ModalSize.ExtraLarge,ModalPosition.TopCenter))">Xem hóa đơn</button>
                                
                            </div>

                        </div>
                    </div>
                    </div>
             </div>
    </div>
        <!-- Cart End -->
    }

}

@code {

    string urlimage = "https://localhost:7268";
    bool orderPlaced = false;
    [Parameter]
    public UserIP userIP { get; set; }
    public List<CartItems> cartItems = new List<CartItems>();

    public List<Khachhang> khachhangs = new List<Khachhang>();
    Khachhang khachhang = new Khachhang();
    KhachHangService khachHangService = new KhachHangService();


    DonDatDto dondatDto = new DonDatDto();
    List<DonDatDto> listDonDat = new List<DonDatDto>();
    DonDatService donDatService = new DonDatService();
    CtDonDatDto ctDonDatDto = new CtDonDatDto();
    CtDonDatService CtDonDatService = new CtDonDatService();


    GioHangDto gioHangDto = new GioHangDto();
    CTGioHangDto cTGioHangDto = new CTGioHangDto();

    GioHangService gioHangService = new GioHangService();
    CTGioHangService cTGioHangService = new CTGioHangService();

    [CascadingParameter] public IModalService Modal { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    int temp;
    private string display = "block;";
    private string display1 = "block;";
    private string display2 = "none;";
    private string Message { get; set; } = "";
    bool flag = false;
    bool flagIvoice = false;
    private int CountDonDat { get; set; }
    private int MaDonDat { get; set; }
    protected override async Task OnInitializedAsync()

    {
        try 
        {
            var checkdisplay = await sessionStorage.GetItemAsync<string>("display");
            if(checkdisplay != null)
                {
                    display = checkdisplay;
                    display1 = checkdisplay;
                }
            var makhachhang = await sessionStorage.GetItemAsync<string>("ma_khachhang");
            cartItems = await CartService.GetCartItems(makhachhang);
            var getvnpcheck = await sessionStorage.GetItemAsync<string>("vnpcheckcode_true");
            if (getvnpcheck == "00")
            {
                toastService.ShowSuccess("Thanh toán thành công", "Thông báo");
                display2 = "block;";
                await AddDonDat();
            }

        }
        catch (Exception ex) {

        }

    }

    private async Task DeleteItem(CartItems items)
    {
        await CartService.DeleteItem(items);
        var ma_khachhang = await sessionStorage.GetItemAsync<string>("ma_khachhang");
        cartItems = await CartService.GetCartItems(ma_khachhang);
    }

    private async Task PlaceOrder()
    {

    }
    public async void Ivoice(ModalSize size, ModalPosition position)
    {
        display = "none;";
        display1 = "none;";
        display2 = "none;";
        var options = new ModalOptions { Size = size, Position = position };
        if (size == ModalSize.Custom)
            options.SizeCustomClass = "my-custom-size";
        if (position == ModalPosition.Custom)
            options.PositionCustomClass = "my-custom-position";
        Modal.Show<Ivoice>("Hóa đơn của bạn ",options);
    }
    private async Task AddDonDat()
    {
        var name_khCreate = await sessionStorage.GetItemAsync<string>("ten_kh1");
        var name_khLogin = await sessionStorage.GetItemAsync<string>("ten_kh");
        var ma_khCreate = await sessionStorage.GetItemAsync<string>("ma_khachhangCreate");
        var ma_khLogin = await sessionStorage.GetItemAsync<string>("ma_khachhang");

        khachhang = await khachHangService.GetKhachHang(ma_khLogin);

        dondatDto.MaDdh = ("DDH" + MaDonDat).ToString();
        dondatDto.TongDdh = @cartItems.Sum(item => (item.GiaSp * item.Sl));
        dondatDto.Diachi = khachhang.DiachiKh;
        await donDatService.CreateDonDat(dondatDto);
        foreach (var item in cartItems)
        {
            ctDonDatDto.MaDdh = dondatDto.MaDdh;
            ctDonDatDto.MaSp = item.MaSp;
            ctDonDatDto.Sl = item.Sl;
            ctDonDatDto.Dg = item.Sl * item.GiaSp;
            await CtDonDatService.CreateCtdonDat(ctDonDatDto);
        }

    }
    public async void Submit(ModalSize size, ModalPosition position)
    {
        display = "none;";
        display1 = "none;";
        var options = new ModalOptions { Size = size, Position = position };
        if (size == ModalSize.Custom)
            options.SizeCustomClass = "my-custom-size";
        if (position == ModalPosition.Custom)
            options.PositionCustomClass = "my-custom-position";
        Modal.Show<CheckInforPay>("Kiểm tra và chỉnh sửa thông tin", options);
       
    }

    /// Gui mail xac nhan

    private async void SendMail()
    {
        var name_khCreate = await sessionStorage.GetItemAsync<string>("ten_kh1");
        var name_khLogin = await sessionStorage.GetItemAsync<string>("ten_kh");
        var ma_khCreate = await sessionStorage.GetItemAsync<string>("ma_khachhangCreate");
        var ma_khLogin = await sessionStorage.GetItemAsync<string>("ma_khachhang");
        if (name_khLogin != null)
        {
            //var result = await gioHangService.GetDetail(ma_khLogin);
            khachhang = await khachHangService.GetKhachHang(ma_khLogin);
            try
            {
                using (MailMessage mail = new MailMessage())
                {
                    mail.From = new MailAddress("truongtrungtrong@outlook.com.vn");
                    mail.To.Add("truongtrungtrong@gmail.com");
                    mail.Subject = "Xác nhận đặt sản phẩm của chúng tôi !";
                    mail.Body = "Cửa hàng thời trang MultiShop - Online Shop xin chào " + khachhang.TenKh;
                    mail.Body += "<p>Chúng tôi xin phép xác nhận thông tin đặt sản phẩm của bạn <p/>";
                    mail.Body += "<p>Thời gian: " + DateTime.Now;
                    mail.Body += "<p>Giá tổng sản phẩm: " + sanpham.FormatVND(int.Parse(@cartItems.Sum(item => (item.GiaSp * item.Sl) - (item.GiaSp * item.Sl) * 0.05).ToString())) + " VND " + " trên " + cartItems.Count() + " sản phẩm " + "</p>";
                    mail.Body += "<p>Địa chỉ giao hàng: " + khachhang.DiachiKh.ToString() + "</p>";
                    mail.Body += "<p>Xin cảm ơn bạn đã mua hàng tại shop của chúng tôi !<br>Trân trọng<br>MultiShop - Online Shop</p>";
                    mail.IsBodyHtml = true;
                    using (SmtpClient smtp = new SmtpClient("smtp.office365.com", 587))
                    {
                        smtp.Credentials = new System.Net.NetworkCredential("truongtrungtrong@outlook.com.vn", "m&VqK8Vt");
                        smtp.EnableSsl = true;
                        smtp.Send(mail);
                        Message = "Mail Sent";

                    }
                }
                NavigationManager.NavigateTo("/");
                toastService.ShowSuccess("Mời bạn kiểm tra email !", "Đặt hàng thành công !");
            }
            catch (Exception ex)
            {
                throw;
                Message = ex.Message;
            }
        }
        else
        {
            //var result = await gioHangService.GetDetail(ma_khCreate);
            khachhang = await khachHangService.GetKhachHang(ma_khCreate);
            try
            {
                using (MailMessage mail = new MailMessage())
                {
                    mail.From = new MailAddress("truongtrungtrong@outlook.com.vn");
                    mail.To.Add("truongtrungtrong@gmail.com");
                    mail.Subject = "Xác nhận đặt sản phẩm của chúng tôi !";
                    mail.Body = "Cửa hàng thời trang MultiShop - Online Shop xin chào " + khachhang.TenKh;
                    mail.Body += "<p>Chúng tôi xin phép xác nhận thông tin đặt sản phẩm của bạn <p/>";
                    mail.Body += "<p>Thời gian: " + DateTime.Now;
                    mail.Body += "<p>Giá tổng sản phẩm: " + sanpham.FormatVND(int.Parse(@cartItems.Sum(item => (item.GiaSp * item.Sl) - (item.GiaSp * item.Sl) * 0.05).ToString())) + " VND " + " trên " + cartItems.Count() + " sản phẩm " + "</p>";
                    mail.Body += "<p>Địa chỉ giao hàng: " + khachhang.DiachiKh.ToString() + "</p>";
                    mail.Body += "<p>Xin cảm ơn bạn đã mua hàng tại shop của chúng tôi !<br>Trân trọng<br>MultiShop - Online Shop</p>";
                    mail.IsBodyHtml = true;

                    using (SmtpClient smtp = new SmtpClient("smtp.office365.com", 587))
                    {
                        smtp.Credentials = new System.Net.NetworkCredential("truongtrungtrong@outlook.com.vn", "m&VqK8Vt");
                        smtp.EnableSsl = true;
                        smtp.Send(mail);
                        Message = "Mail Sent";

                    }
                }
                NavigationManager.NavigateTo("/");
                toastService.ShowSuccess("Mời bạn kiểm tra email !", "Đặt hàng thành công !");
            }
            catch (Exception ex)
            {
                throw;
                Message = ex.Message;
            }
        }

}
}