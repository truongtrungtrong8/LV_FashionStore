@page "/Cart/CheckMail"
@using Model
@using Model.DataDB
@using Model.Dto
@using Model.Pay
@using Web_Client.Pages.Taikhoan
@using Web_Client.Services
@inject ICartService CartService
@inject ISanphamService sanpham
@layout LayoutCart
@inject IJSRuntime JS
@inject IJSRuntime JSRuntime
@using System.Net.Mail
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IToastService toastService
@inject NavigationManager NavigationManager

<EditForm Model="newkhachang" style="width:400px">
    <form class="forms-sample">
        <div class="form-group">
            <label for="exampleInputUsername1">Họ và tên</label>
            <InputText class="form-control" placeholder="" @bind-Value="newkhachang.TenKh"></InputText>
        </div>
        <div class="form-group">
            <label for="exampleInputEmail1">Số điện thoại</label>
            <InputText class="form-control" placeholder="" @bind-Value="newkhachang.SdtKh"></InputText>
        </div>
        <div class="form-group">
            <label for="exampleInputPassword1">Địa chỉ</label>
            <InputText class="form-control" placeholder="" @bind-Value="newkhachang.DiachiKh"></InputText>
        </div>

    </form>

    <button type="button" class="btn btn-primary me-2" @onclick="Submit" style="margin-left:15%">Xác nhận thanh toán</button>
    <button type="button" class="btn btn-primary me-2" @onclick="Close" style="margin-left:15%">Hủy</button>
</EditForm>

@code {

    [Parameter]
    public UserIP userIP { get; set; }
    public List<CartItems> cartItems = new List<CartItems>();

    public List<Khachhang> khachhangs = new List<Khachhang>();
    Khachhang khachhang = new Khachhang();
    KhachHangDto newkhachang = new KhachHangDto();
    KhachHangService khachHangService = new KhachHangService();
    [CascadingParameter] public IModalService Modal { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }


    DonDatDto dondatDto = new DonDatDto();
    List<DonDatDto> listDonDat = new List<DonDatDto>();
    DonDatService donDatService = new DonDatService();
    CtDonDatDto ctDonDatDto = new CtDonDatDto();
    CtDonDatService CtDonDatService = new CtDonDatService();

    Giohang giohang = new Giohang();
    GioHangDto gioHangDto = new GioHangDto();
    CTGioHangDto cTGioHangDto = new CTGioHangDto();

    GioHangService gioHangService = new GioHangService();
    CTGioHangService cTGioHangService = new CTGioHangService();
    int temp;
    private string Message { get; set; } = "";


    protected override async Task OnInitializedAsync()

    {
        try
        {
            var checkdisplay = await sessionStorage.GetItemAsync<string>("display");
            var makhachhang = await sessionStorage.GetItemAsync<string>("ma_khachhang");
            if(makhachhang != null)
            {
                string temp = "GH" + makhachhang;
                cartItems = await cTGioHangService.GetCartAllInUser(temp);
                var result = await khachHangService.GetKhachHang(makhachhang);
                newkhachang.MaKh = result.MaKh;
                newkhachang.TenKh = result.TenKh;
                newkhachang.TenTk = result.TenTk;
                newkhachang.SdtKh = result.SdtKh;
                newkhachang.DiachiKh = result.DiachiKh;
            }
            else
            {
                
                var ma_khCreate = await sessionStorage.GetItemAsync<string>("ma_khachhangCreate");
                var result = await khachHangService.GetKhachHang(ma_khCreate);
                string temp = "GH" + ma_khCreate;
                cartItems = await cTGioHangService.GetCartAllInUser(temp);
                newkhachang.MaKh = result.MaKh;
                newkhachang.TenKh = result.TenKh;
                newkhachang.TenTk = result.TenTk;
                newkhachang.SdtKh = result.SdtKh;
                newkhachang.DiachiKh = result.DiachiKh;
            }
           
        }
        catch (Exception ex)
        {

        }
    }
    private async void Close()
    {
        await this.ModalInstance.CancelAsync();
    }

    private async void Submit()
    {
        var makhachhang = await sessionStorage.GetItemAsync<string>("ma_khachhang");
        if (makhachhang != null)
        {
            await khachHangService.EditKhachhang(makhachhang, newkhachang);
            await this.ModalInstance.CancelAsync();
            SendMail();
        }
        else
        {
            var ma_khCreate = await sessionStorage.GetItemAsync<string>("ma_khachhangCreate");
            await khachHangService.EditKhachhang(ma_khCreate, newkhachang);
            await this.ModalInstance.CancelAsync();
            SendMail();
        }
        
    }
    private async void SendMail()
    {
            var ma_khLogin = await sessionStorage.GetItemAsync<string>("ma_khachhang");
            var name_khLogin = await sessionStorage.GetItemAsync<string>("ten_kh");
            khachhang = await khachHangService.GetKhachHang(ma_khLogin);
            var id = "GH" + ma_khLogin;
            giohang = await gioHangService.GetDetail(id);
            if(name_khLogin != null)
            {
                try
                {
                    using (MailMessage mail = new MailMessage())
                    {
                        mail.From = new MailAddress("truongtrungtrong@outlook.com.vn");
                        mail.To.Add("truongtrungtrong@gmail.com");
                        mail.Subject = "Xác nhận đặt sản phẩm của chúng tôi !";
                        mail.Body += "Cửa hàng thời trang MultiShop - Online Shop xin chào " + khachhang.TenKh;
                        mail.Body += "Chúng tôi xin phép xác nhận thông tin đặt sản phẩm của bạn";
                        mail.Body += "Thời gian: " + DateTime.Now;
                        
                        foreach(var item in cartItems)
                        {
                            mail.Body +=item.TenSp +" --Màu: "+ item.Ten_Mau + " --Size: " + item.Ten_Size;
                        }
                        mail.Body += "Giá tổng sản phẩm: " + sanpham.FormatVND(giohang.Tongtien + (giohang.Tongtien * 0.02)) + " VND " + " trên " + cartItems.Count() + " sản phẩm ";
                        mail.Body += "Địa chỉ giao hàng: " + khachhang.DiachiKh.ToString();
                        mail.Body += "<p>Xin cảm ơn bạn đã mua hàng tại shop của chúng tôi !<br>Trân trọng<br>MultiShop - Online Shop</p>";
                        mail.IsBodyHtml = true;
                        using (SmtpClient smtp = new SmtpClient("smtp.office365.com", 587))
                        {
                            smtp.Credentials = new System.Net.NetworkCredential("truongtrungtrong@outlook.com.vn", "m&VqK8Vt");
                            smtp.EnableSsl = true;
                            smtp.Send(mail);
                            Message = "Mail Sent";
                        }
                    }

                    NavigationManager.NavigateTo("/");
                    toastService.ShowSuccess("Mời bạn kiểm tra email truongtrungtrong@gmail.com ", "Thành công !");
                }
                catch (Exception ex)
                {
                    throw;
                    Message = ex.Message;
                }
            }

        else
        {
            var name_khCreate = await sessionStorage.GetItemAsync<string>("ten_kh1");
            var ma_khCreate = await sessionStorage.GetItemAsync<string>("ma_khachhangCreate");
            khachhang = await khachHangService.GetKhachHang(ma_khCreate);
            try
            {
                using (MailMessage mail = new MailMessage())
                {
                    mail.From = new MailAddress("truongtrungtrong@outlook.com.vn");
                    mail.To.Add("truongtrungtrong@gmail.com");
                    mail.Subject = "Xác nhận đặt sản phẩm của chúng tôi !";
                    mail.Body += "Cửa hàng thời trang MultiShop - Online Shop xin chào " + khachhang.TenKh;
                    mail.Body += "Chúng tôi xin phép xác nhận thông tin đặt sản phẩm của bạn";
                    mail.Body += "Thời gian: " + DateTime.Now;
                    foreach (var item in cartItems)
                    {
                        mail.Body += item.TenSp + " --Màu: " + item.Ten_Mau + " --Size: " + item.Ten_Size;
                    }
                    mail.Body += "Giá tổng sản phẩm: " + sanpham.FormatVND(giohang.Tongtien + (giohang.Tongtien * 0.02)) + " VND " + " trên " + cartItems.Count() + " sản phẩm ";
                    mail.Body += "Địa chỉ giao hàng: " + khachhang.DiachiKh.ToString();
                    mail.Body += "<p>Xin cảm ơn bạn đã mua hàng tại shop của chúng tôi !<br>Trân trọng<br>MultiShop - Online Shop</p>";
                    mail.IsBodyHtml = true;
                    using (SmtpClient smtp = new SmtpClient("smtp.office365.com", 587))
                    {
                        smtp.Credentials = new System.Net.NetworkCredential("truongtrungtrong@outlook.com.vn", "m&VqK8Vt");
                        smtp.EnableSsl = true;
                        smtp.Send(mail);
                        Message = "Mail Sent";
                    }
                }

                NavigationManager.NavigateTo("/");
                toastService.ShowSuccess("Mời bạn kiểm tra email truongtrungtrong@gmail.com ", "Thành công !");
            }
            catch (Exception ex)
            {
                throw;
                Message = ex.Message;
            }
        }
    }
}
