@page "/Khachhang/DetailDonDatHang/{id}"
@using Model
@using Model.DataDB
@using Model.Dto
@using Model.Pay
@using Web_Client.Pages.Taikhoan
@using Web_Client.Services
@inject ICartService CartService
@inject ISanphamService sanphamService
@layout MainLayout
@inject IJSRuntime JS
@inject IJSRuntime JSRuntime
@using System.Net.Mail
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IToastService toastService
@inject NavigationManager NavigationManager


<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-lg-12 table-responsive mb-5">
            <table class="table table-light table-borderless table-hover text-center mb-0">
                <thead class="thead-dark">
                    <tr>
                        <th>Sản phẩm</th>
                        <th>Tên khách hàng</th>
                        <th>Số lượng</th>
                        <th>Màu - Size</th>
                        <th>Tổng tiền</th>
                        <th>Địa chỉ</th>
                    </tr>
                </thead>
                @foreach (var item in listCtDdh)
                {
                    <tbody class="align-middle">
                        <tr>
                            <td class="align-middle"><img src="@urlimage/images/@item.Hinhanh" alt="" style="width: 50px;"> @item.TenSP</td>
                            <td class="align-middle">@item.TenKH</td>
                            <td class="align-middle">@item.Sl</td>
                            <td class="align-middle">@item.Mau - @item.Size</td>
                            <td class="align-middle">@sanphamService.FormatVND(item.TongTien) VND</td>
                            <td class="align-middle">@item.DiaChi</td>
                        </tr>
                    </tbody>
                }
            </table>
        </div>
    </div>
</div>


@code {
    [Parameter] 
    public string Id { get; set; }
    string urlimage = "https://localhost:7268";
    bool orderPlaced = false;
    [Parameter]
    public UserIP userIP { get; set; }
    public List<CartItems> cartItems = new List<CartItems>();
    CartItems cart = new CartItems();
    public List<Khachhang> khachhangs = new List<Khachhang>();
    Khachhang khachhang = new Khachhang();
    KhachHangService khachHangService = new KhachHangService();

    DonDatDto dondatDto = new DonDatDto();
    List<DonDatDto> listDonDat = new List<DonDatDto>();
    DonDatService donDatService = new DonDatService();
    CtDonDatDto ctDonDatDto = new CtDonDatDto();
    List<CtddhDtoList> listCtDdh = new List<CtddhDtoList>();
    CtDonDatService CtDonDatService = new CtDonDatService();

    Giohang giohang = new Giohang();
    GioHangDto gioHangDto = new GioHangDto();
    CTGioHangDto cTGioHangDto = new CTGioHangDto();

    GioHangService gioHangService = new GioHangService();
    CTGioHangService cTGioHangService = new CTGioHangService();

    TonkhoDto tonkho = new TonkhoDto();
    Sanpham_Model sanpham = new Sanpham_Model();
    TonkhoService tonkhoService = new TonkhoService();

    KhuyenMaiDto khuyenmai = new KhuyenMaiDto();

    [CascadingParameter] public IModalService Modal { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    private string name;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            var name_khLogin = await sessionStorage.GetItemAsync<string>("ten_kh");
            var makhachhang = await sessionStorage.GetItemAsync<string>("ma_khachhang");
            listCtDdh = await CtDonDatService.GetList(Id);
            listDonDat = await donDatService.GetListByKH(makhachhang);
            name = name_khLogin;
        }
        catch (Exception ex)
        {
            var name_khCreate = await sessionStorage.GetItemAsync<string>("ten_kh1");
            var ma_khCreate = await sessionStorage.GetItemAsync<string>("ma_khachhangCreate");
            listCtDdh = await CtDonDatService.GetList(Id);
            listDonDat = await donDatService.GetListByKH(ma_khCreate);
            name = name_khCreate;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var name_khLogin = await sessionStorage.GetItemAsync<string>("ten_kh");
            var makhachhang = await sessionStorage.GetItemAsync<string>("ma_khachhang");
            listCtDdh = await CtDonDatService.GetList(Id);
            name = name_khLogin;
        }
        catch (Exception ex)
        {
            var name_khCreate = await sessionStorage.GetItemAsync<string>("ten_kh1");
            var ma_khCreate = await sessionStorage.GetItemAsync<string>("ma_khachhangCreate");
            listCtDdh = await CtDonDatService.GetList(Id);
            name = name_khCreate;
        }
    }
    private async Task Delete(string id)
    {

        foreach (var item in listCtDdh)
        {
            var result = await tonkhoService.GetTonkho(item.MaSp);
            sanpham = await sanphamService.GetProduct(item.MaSp);
            tonkho.MaSp = result.MaSp;
            tonkho.MaCh = result.MaCh;
            tonkho.Sl = result.Sl + item.Sl;
            tonkho.Dg = result.Dg + sanpham.GiaSp * item.Sl;
            await tonkhoService.EditTonkho(item.MaSp, result.MaCh, tonkho);
            await CtDonDatService.DeleteDDH(id, item.MaSp);
            await donDatService.Delete_DD(id);
        }
        NavigationManager.NavigateTo("/");
        toastService.ShowSuccess("Hủy đơn hàng thành công !", "Thành công");
    }
    private async Task Detail(string id)
    {
        NavigationManager.NavigateTo("DetailDonDatHang/" + id);
    }
}
