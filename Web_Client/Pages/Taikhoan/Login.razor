@page "/TaiKhoan/Login"
@inject IJSRuntime JS
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IToastService toastService
@inject Blazored.LocalStorage.ILocalStorageService localStorrage
@using Model
@using Model.DataDB
@using Web_Client.Pages.KhachHang
@using Web_Client.Services
@inject NavigationManager NavigationManager
@inject SessionTemp tempsessionLogin


<form style="width:400px">
    <!-- Email input -->
    <div class="form-outline mb-4">
        <label class="form-label" for="form2Example1">Tên tài khoản</label>
        <input type="tel" @bind-value="acc.TenTk" class="form-control" />
    </div>

    <!-- Password input -->
    <div class="form-outline mb-4">
        <label class="form-label" for="form2Example2">Mật khẩu</label>
        <input type="password" @bind-value="acc.Matkhau" class="form-control" />
    </div>

    <!-- Submit button -->
    <button style="width:50%;margin-inline: auto;color:deepskyblue" type="button" class="btn btn-primary btn-block mb-4" @onclick="CheckLogin">Đăng nhập</button>

    <!-- Register buttons -->
    <div class="text-center">
        <div class="col">
            <!-- Simple link -->
            <a style="color:mediumblue;cursor:pointer" @onclick="ForgetPassword">Quên mật khẩu?</a>
        </div>
        <p>Bạn chưa có tài khoản? <a style="color:mediumblue;cursor:pointer" @onclick="Register">Đăng ký ngay</a></p>
    </div>
</form>


@code {
    Taikhoan acc = new Taikhoan();

    TaiKhoanService accService = new TaiKhoanService();
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [CascadingParameter] public IModalService Modal { get; set; }


    KhachHangService khachHangService = new KhachHangService();
    List<Khachhang> list_kh = new List<Khachhang>();
    Khachhang khachhang = new Khachhang();



    public async void CheckLogin()
    {

        Taikhoan newAcc = new Taikhoan();

        await sessionStorage.SetItemAsync("ten_tk_kh", acc.TenTk);
        try
        {
            newAcc = await accService.GetTaiKhoan(acc.TenTk, acc.Matkhau);
            if ((await CheckKhachhang(acc.TenTk)) == false)
            {
                if (newAcc != null)
                {
                    var role = newAcc.Quyensd;
                    var name = newAcc.TenTk;
                    await sessionStorage.SetItemAsync("role", role);

                    if (role == "admin")
                    {


                        NavigationManager.NavigateTo("https://localhost:7268");
                    }
                    else
                    {
                        await sessionStorage.SetItemAsync("user_name", name);
                        NavigationManager.NavigateTo("/");
                    }

                    toastService.ShowSuccess("Đăng nhập thành công", "Chúc mừng!");
                    await this.ModalInstance.CancelAsync();
                }
            }



        }
        catch (Exception ex)
        {
            if (newAcc != null)
            {
                var role = newAcc.Quyensd;
                var name = newAcc.TenTk;
                await sessionStorage.SetItemAsync("role", role);

                if (role == "admin")
                {

                    await sessionStorage.SetItemAsync("admin_name", name);
                    NavigationManager.NavigateTo("https://localhost:7268");
                }
                else
                {
                    await sessionStorage.SetItemAsync("user_name", name);
                    NavigationManager.NavigateTo("/");
                }
                toastService.ShowSuccess("Đăng nhập thành công", "Chúc mừng!");
                await this.ModalInstance.CancelAsync();
                Modal.Show<Create_KhachHang>("Chỉnh sửa thông tin");
            }
        }

    }
    public void ForgetPassword()
    {
        //this.ModalInstance.CancelAsync();
        //Thread.Sleep(500);
        //Modal.Show<Register>("Đăng ký tài khoản mới");
    }

    public void Register()
    {
        //this.ModalInstance.CancelAsync();
        //Thread.Sleep(500);
        //this.Modal.Show<Register>("Đăng ký tài khoản mới");
    }

    public async Task<bool> CheckKhachhang(string phone)
    {
        khachhang = await khachHangService.GetKhachHang(phone);
        var name_tenkh = khachhang.TenKh;
        var makhachhang = khachhang.MaKh;
        tempsessionLogin.Ten = khachhang.TenKh;
        Console.WriteLine(tempsessionLogin);
        if (khachhang == null)
            return true;
        else
        await sessionStorage.SetItemAsync("ma_khachhang", makhachhang);
        await sessionStorage.SetItemAsync("ten_kh", name_tenkh);
       
        Console.WriteLine();
        return false; 
    }
}


