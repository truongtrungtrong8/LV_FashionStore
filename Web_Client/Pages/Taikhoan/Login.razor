@page "/TaiKhoan/Login"
@inject IJSRuntime JS
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IToastService toastService
@inject Blazored.LocalStorage.ILocalStorageService localStorrage
@using Model
@using Model.DataDB
@using System.Security.Cryptography
@using System.Text
@using Web_Client.Pages.KhachHang
@using Web_Client.Services
@inject NavigationManager NavigationManager
@inject SessionTemp tempsessionLogin


<section class="ftco-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-12 col-lg-10">
                <div class="wrap d-md-flex">
                    <div class="img" style="background-image: url(images/logo.jpg);">
                    </div>
                    <div class="login-wrap p-4 p-md-5">
                        <div class="d-flex">
                            <div class="w-100">
                                <h3 class="mb-4">Đăng nhập</h3>
                            </div>
                            <div class="w-100">
                                <p class="social-media d-flex justify-content-end">
                                    <a href="#" class="social-icon d-flex align-items-center justify-content-center"><span class="fa fa-facebook"></span></a>
                                    <a href="#" class="social-icon d-flex align-items-center justify-content-center"><span class="fa fa-twitter"></span></a>
                                </p>
                            </div>
                        </div>
                        <EditForm Model="acc">
                            <form class="signin-form">
                                <div class="form-group mb-3">
                                    <label class="label" for="name">Số điện thoại</label>
                                    <InputText type="tel" @bind-Value="acc.TenTk" @ref=phone class="form-control" />
                                </div>
                                <div class="form-group mb-3">
                                    <label class="label" for="password">Mật khẩu</label>
                                    <InputText type="password" @bind-Value="acc.Matkhau" @ref=password class="form-control" />
                                </div>
                                <div class="form-group">
                                    <button type="button" class="form-control btn btn-primary rounded submit px-3" @onclick="CheckLogin">Đăng nhập</button>
                                </div>
                                <div class="form-group d-md-flex">
                                    <div class="w-50 text-left">
                                        <label class="checkbox-wrap checkbox-primary mb-0">
                                            Nhớ mật khẩu
                                            <input type="checkbox" checked>
                                            <span class="checkmark"></span>
                                        </label>
                                    </div>
                                    <div class="w-50 text-md-right">
                                        <a href="#">Quên mật khẩu</a>
                                    </div>
                                </div>
                            </form>
                        </EditForm>

                        <p class="text-center">Bạn chưa có tài khoản ? <a data-toggle="tab" href="#signup">Đăng ký</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@code {
    Taikhoan acc = new Taikhoan();

    TaiKhoanService accService = new TaiKhoanService();
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [CascadingParameter] public IModalService Modal { get; set; }


    KhachHangService khachHangService = new KhachHangService();
    List<Khachhang> list_kh = new List<Khachhang>();
    Khachhang khachhang = new Khachhang();

    private InputText phone;
    private InputText password;

    public async void CheckLogin()
    {

        Taikhoan newAcc = new Taikhoan();


        await sessionStorage.SetItemAsync("ten_tk_kh", acc.TenTk);
        try
        {


            if (phone.Value == null)
            {
                toastService.ShowError("Vui lòng nhập số điện thoại", "Lỗi");
                phone.Element.Value.FocusAsync();
            }
            else if (password.Value == null)
            {
                toastService.ShowError("Vui lòng nhập mật khẩu", "Lỗi");
                password.Element.Value.FocusAsync();
            }
            else
            {

                try
                {

                    if ((await CheckKhachhang(acc.TenTk)) == false)
                    {
                        try
                        {
                            var checkMD5 = GetMD5(acc.Matkhau);
                            newAcc = await accService.GetTaiKhoan(acc.TenTk, checkMD5);
                            if (newAcc != null)
                            {
                                var role = newAcc.Quyensd;
                                if (role == "admin")
                                {
                                    NavigationManager.NavigateTo("https://localhost:7268");
                                }
                                else
                                {
                                    
                                    await this.ModalInstance.CancelAsync();
                                    NavigationManager.NavigateTo("/",forceLoad:true);
                                    toastService.ShowSuccess("Đăng nhập thành công", "Chúc mừng!");
                                }

                            }
                        }
                        catch (Exception ex)
                        {
                            toastService.ShowError("Lỗi !", "Nhập lại thông tin !");
                        }

                    }
                }
                catch (Exception ex)
                {
                    try
                    {
                        var checkMD5 = GetMD5(acc.Matkhau);
                        newAcc = await accService.GetTaiKhoan(acc.TenTk, checkMD5);
                        if (newAcc != null)
                        {
                            var role = newAcc.Quyensd;
                            if (role == "admin")
                            {

                                NavigationManager.NavigateTo("https://localhost:7268");
                            }
                            else
                            {
                                //await this.ModalInstance.CancelAsync();
                                toastService.ShowSuccess("Đăng nhập thành công", "Chúc mừng!");
                                Modal.Show<Create_KhachHang>("Chỉnh sửa thông tin");
                                //NavigationManager.NavigateTo("/");
                            }

                        }
                    }
                    catch (Exception ex1)
                    {
                        toastService.ShowError("Lỗi !", "Nhập lại thông tin !");
                    }
                }
            }
        }

        catch (Exception ex)
        {
            toastService.ShowError("Lỗi !", "Nhập lại thông tin !");
        }
    }


    public async Task<bool> CheckKhachhang(string phone)
    {
        khachhang = await khachHangService.GetKhachHang(phone);
        var name_tenkh = khachhang.TenKh;
        var makhachhang = khachhang.MaKh;
        tempsessionLogin.Ten = khachhang.TenKh;
        Console.WriteLine(tempsessionLogin);
        if (khachhang == null)
            return true;
        else
            await sessionStorage.SetItemAsync("ma_khachhang", makhachhang);
        await sessionStorage.SetItemAsync("ten_kh", name_tenkh);
        Console.WriteLine();
        return false;
    }

    public string GetMD5(string str)
    {
        MD5 md5 = new MD5CryptoServiceProvider();
        byte[] fromData = Encoding.UTF8.GetBytes(str);
        byte[] targetData = md5.ComputeHash(fromData);
        string byte2String = null;

        for (int i = 0; i < targetData.Length; i++)
        {
            byte2String += targetData[i].ToString("x2");
        }
        return byte2String;
    }
}


